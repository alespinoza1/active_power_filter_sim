%implements s11_b0_608lq_Outputs "C"

%function Outputs(block, system) Output
%<SLibCGIRAccessLocalVar(119, 0)> %% rtb_donotdeletethisgain_n
%<SLibCGIRAccessLocalVar(125, 0)> %% rtb_Compare
%<SLibCGIRAccessLocalVar(113, 0)> %% rtb_donotdeletethisgain_eb
%<SLibCGIRAccessLocalVar(114, 0)> %% rtb_donotdeletethisgain_f
%<SLibCGIRAccessLocalVar(115, 0)> %% rtb_donotdeletethisgain_ex
%<SLibCGIRAccessLocalVar(93, 0)> %% rtb_donotdeletethisgain
%<SLibCGIRAccessLocalVar(94, 0)> %% rtb_donotdeletethisgain_h
%<SLibCGIRAccessLocalVar(95, 0)> %% rtb_donotdeletethisgain_b
%<SLibCGIRAccessLocalVar(96, 0)> %% rtb_donotdeletethisgain_o
%<SLibCGIRAccessLocalVar(97, 0)> %% rtb_donotdeletethisgain_e
%<SLibCGIRAccessLocalVar(122, 0)> %% rtb_d
%<SLibCGIRAccessLocalVar(13, 0)> %% rtb_IntegralGain
%<SLibCGIRAccessLocalVar(90, 0)> %% rtb_Clock6
%<SLibCGIRAccessLocalVar(16, 0)> %% rtb_Sum
%<SLibCGIRAccessLocalVar(2, 0)> %% rtb_Kv
%<SLibCGIRAccessLocalVar(5, 0)> %% rtb_Kv_b
%<SLibCGIRAccessLocalVar(109, 0)> %% rtb_Gain1_j
%<SLibCGIRAccessLocalVar(9, 0)> %% rtb_Switch
%<SLibCGIRAccessLocalVar(123, 0)> %% rtb_Gain_f
%<SLibCGIRAccessLocalVar(54, 0)> %% rtb_Product_p
%<SLibCGIRAccessLocalVar(64, 0)> %% rtb_Product_c
%<SLibCGIRAccessLocalVar(68, 0)> %% rtb_Product1_h
%<SLibCGIRAccessLocalVar(23, 0)> %% rtb_Product
%<SLibCGIRAccessLocalVar(33, 0)> %% rtb_Product_h
%<SLibCGIRAccessLocalVar(37, 0)> %% rtb_Product1
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
real_T rtb_Sum2;
real_T rtb_Product4;
real_T rtb_Product4_g;
real_T rtb_Product4_m;
real_T rtb_Gain2;
real_T rtb_Integrator2;
real_T rtb_c;
real_T rtb_Switch_f[6];
real_T rtb_Switch_k[6];
real_T rtb_Switch_jt[6];
int32_T i;
real_T AC_tmp;
real_T rtb_Sum3_tmp;
real_T rtb_Sum4_tmp;
%closefile localVarDecl
%assign tlcOutputsFcnOfS11B10 = OpaqueTLCBlockFcn("Outputs", 11, 10, 0, 4)
%assign tlcOutputsFcnOfS11B34 = OpaqueTLCBlockFcn("Outputs", 11, 34, 0, 4)
%assign tlcOutputsFcnOfS11B37 = OpaqueTLCBlockFcn("Outputs", 11, 37, 0, 4)
%assign tlcOutputsFcnOfS11B44 = OpaqueTLCBlockFcn("Outputs", 11, 44, 0, 4)
%assign tlcOutputsFcnOfS11B55 = OpaqueTLCBlockFcn("Outputs", 11, 55, 0, 4)
%assign tlcOutputsFcnOfS11B62 = OpaqueTLCBlockFcn("Outputs", 11, 62, 0, 4)
%assign tlcOutputsFcnOfS11B73 = OpaqueTLCBlockFcn("Outputs", 11, 73, 0, 4)
%assign tlcOutputsFcnOfS11B80 = OpaqueTLCBlockFcn("Outputs", 11, 80, 0, 4)
%assign tlcOutputsFcnOfS11B141 = OpaqueTLCBlockFcn("Outputs", 11, 141, 0, 4)
%assign tlcOutputsFcnOfS11B148 = OpaqueTLCBlockFcn("Outputs", 11, 148, 0, 4)
%assign tlcOutputsFcnOfS11B159 = OpaqueTLCBlockFcn("Outputs", 11, 159, 0, 4)
%assign tlcOutputsFcnOfS11B166 = OpaqueTLCBlockFcn("Outputs", 11, 166, 0, 4)
%assign tlcOutputsFcnOfS11B177 = OpaqueTLCBlockFcn("Outputs", 11, 177, 0, 4)
%assign tlcOutputsFcnOfS11B184 = OpaqueTLCBlockFcn("Outputs", 11, 184, 0, 4)
%assign tlcOutputsFcnOfS11B245 = OpaqueTLCBlockFcn("Outputs", 11, 245, 0, 4)
%assign tlcOutputsFcnOfS11B252 = OpaqueTLCBlockFcn("Outputs", 11, 252, 0, 4)
%assign tlcOutputsFcnOfS11B263 = OpaqueTLCBlockFcn("Outputs", 11, 263, 0, 4)
%assign tlcOutputsFcnOfS11B270 = OpaqueTLCBlockFcn("Outputs", 11, 270, 0, 4)
%assign tlcOutputsFcnOfS11B281 = OpaqueTLCBlockFcn("Outputs", 11, 281, 0, 4)
%assign tlcOutputsFcnOfS11B288 = OpaqueTLCBlockFcn("Outputs", 11, 288, 0, 4)
%assign tlcOutputsFcnOfS11B351 = OpaqueTLCBlockFcn("Outputs", 11, 351, 0, 4)
%assign tlcOutputsFcnOfS11B352 = OpaqueTLCBlockFcn("Outputs", 11, 352, 0, 4)
%assign tlcOutputsFcnOfS5B0 = OpaqueTLCBlockFcn("Outputs", 5, 0, 0, 4)
%assign tlcUpdateFcnOfS5B0 = OpaqueTLCBlockFcn("Update", 5, 0, 0, 4)
%assign tlcOutputsFcnOfS3B0 = OpaqueTLCBlockFcn("Outputs", 3, 0, 0, 4)
%assign tlcOutputsFcnOfS3B3 = OpaqueTLCBlockFcn("Outputs", 3, 3, 0, 4)
%assign tlcUpdateFcnOfS3B0 = OpaqueTLCBlockFcn("Update", 3, 0, 0, 4)
%assign tlcUpdateFcnOfS3B3 = OpaqueTLCBlockFcn("Update", 3, 3, 0, 4)
%assign tlcOutputsFcnOfS11B356 = OpaqueTLCBlockFcn("Outputs", 11, 356, 0, 4)
%assign tlcOutputsFcnOfS10B0 = OpaqueTLCBlockFcn("Outputs", 10, 0, 0, 4)
%assign tlcUpdateFcnOfS10B0 = OpaqueTLCBlockFcn("Update", 10, 0, 0, 4)
%assign tlcOutputsFcnOfS8B0 = OpaqueTLCBlockFcn("Outputs", 8, 0, 0, 4)
%assign tlcOutputsFcnOfS8B3 = OpaqueTLCBlockFcn("Outputs", 8, 3, 0, 4)
%assign tlcUpdateFcnOfS8B0 = OpaqueTLCBlockFcn("Update", 8, 0, 0, 4)
%assign tlcUpdateFcnOfS8B3 = OpaqueTLCBlockFcn("Update", 8, 3, 0, 4)
%assign tlcOutputsFcnOfS11B362 = OpaqueTLCBlockFcn("Outputs", 11, 362, 0, 4)
%assign tlcOutputsFcnOfS11B363 = OpaqueTLCBlockFcn("Outputs", 11, 363, 0, 4)
%assign tlcOutputsFcnOfS11B364 = OpaqueTLCBlockFcn("Outputs", 11, 364, 0, 4)
%assign tlcOutputsFcnOfS11B368 = OpaqueTLCBlockFcn("Outputs", 11, 368, 0, 4)
%assign tlcOutputsFcnOfS11B369 = OpaqueTLCBlockFcn("Outputs", 11, 369, 0, 4)
%assign tlcOutputsFcnOfS11B488 = OpaqueTLCBlockFcn("Outputs", 11, 488, 0, 4)
/* Sin: '<S18>/AC' incorporates:
 *  Sin: '<S16>/AC'
 *  Sin: '<S17>/AC'
 *  Step: '<Root>/APF on'
 */
rtb_Product4 = %<(SLibCG_SE(LibGetTaskTime(0)))>;
AC_tmp = 6.2831853071795862 * control_filtro_dq_mod2_P.fe * rtb_Product4;
control_filtro_dq_mod2_B.AC = sin(AC_tmp + control_filtro_dq_mod2_P.teta_c * 3.1415926535897931 / 180.0) * control_filtro_dq_mod2_P.Vs + control_filtro_dq_mod2_P.AC_Bias;
/* Sin: '<S17>/AC' */
control_filtro_dq_mod2_B.AC_o = sin(AC_tmp + control_filtro_dq_mod2_P.teta_b * 3.1415926535897931 / 180.0) * control_filtro_dq_mod2_P.Vs + control_filtro_dq_mod2_P.AC_Bias_m;
/* Sin: '<S16>/AC' */
control_filtro_dq_mod2_B.AC_k = sin(AC_tmp + control_filtro_dq_mod2_P.teta_a * 3.1415926535897931 / 180.0) * control_filtro_dq_mod2_P.Vs + control_filtro_dq_mod2_P.AC_Bias_o;
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS11B10)
    /* S-Function (sfun_spssw_discc): '<S383>/State-Space' incorporates:
 *  Constant: '<S109>/Constant'
 *  Constant: '<S110>/Constant'
 *  Constant: '<S111>/Constant'
 *  Constant: '<S122>/DC'
 *  Constant: '<S132>/DC'
 *  Constant: '<S142>/DC'
 *  Constant: '<S184>/Constant'
 *  Constant: '<S185>/Constant'
 *  Constant: '<S186>/Constant'
 *  Constant: '<S197>/DC'
 *  Constant: '<S207>/DC'
 *  Constant: '<S217>/DC'
 *  Constant: '<S34>/Constant'
 *  Constant: '<S35>/Constant'
 *  Constant: '<S36>/Constant'
 *  Constant: '<S381>/g'
 *  Constant: '<S385>/SwitchCurrents'
 *  Constant: '<S47>/DC'
 *  Constant: '<S57>/DC'
 *  Constant: '<S67>/DC'
 */
%<tlcOutputsFcnOfS11B10>\
%endif
}
/* Step: '<Root>/APF on' */
if (rtb_Product4 < control_filtro_dq_mod2_P.APFon) {
    control_filtro_dq_mod2_B.APFon = control_filtro_dq_mod2_P.APFon_Y0;
} else {
    control_filtro_dq_mod2_B.APFon = control_filtro_dq_mod2_P.APFon_YFinal;
}
%if !WHITE_SPACE(tlcOutputsFcnOfS11B34)
/* S-Function (sfun_tstart): '<S269>/startTime' */
%<tlcOutputsFcnOfS11B34>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S269>/Constant' */
    control_filtro_dq_mod2_B.Constant = control_filtro_dq_mod2_P.Constant_Value;
    /* Gain: '<S307>/do not delete this gain' */
    rtb_donotdeletethisgain_n = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_a * control_filtro_dq_mod2_B.StateSpace_o1[88];
    /* Gain: '<S9>/Kv' incorporates:
 *  Gain: '<S305>/do not delete this gain'
 *  Gain: '<S306>/do not delete this gain'
 */
    rtb_Kv[0] = control_filtro_dq_mod2_P.donotdeletethisgain_Gain * control_filtro_dq_mod2_B.StateSpace_o1[84] * control_filtro_dq_mod2_P.Kv_Gain;
    rtb_Kv[1] = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_l * control_filtro_dq_mod2_B.StateSpace_o1[87] * control_filtro_dq_mod2_P.Kv_Gain;
    rtb_Kv[2] = control_filtro_dq_mod2_P.Kv_Gain * rtb_donotdeletethisgain_n;
    /* RelationalOperator: '<S330>/Compare' incorporates:
 *  Constant: '<S330>/Constant'
 */
    rtb_Compare = (control_filtro_dq_mod2_DW.Integrator_DSTATE >= control_filtro_dq_mod2_P.IntegratorwithWrappedStateDis_b);
    /* Bias: '<S329>/Bias1' */
    rtb_donotdeletethisgain_n = -(control_filtro_dq_mod2_P.IntegratorwithWrappedStateDis_b - control_filtro_dq_mod2_P.IntegratorwithWrappedStateDiscr) + control_filtro_dq_mod2_DW.Integrator_DSTATE;
    /* InitialCondition: '<S329>/Initial' */
    if (control_filtro_dq_mod2_DW.Initial_FirstOutputTime) {
        control_filtro_dq_mod2_DW.Initial_FirstOutputTime = false;
        control_filtro_dq_mod2_B.Initial = control_filtro_dq_mod2_P.Initial_Value;
    } else {
        control_filtro_dq_mod2_B.Initial = rtb_donotdeletethisgain_n;
    }
    /* End of InitialCondition: '<S329>/Initial' */

    /* DiscreteIntegrator: '<S329>/Integrator' */
    if (rtb_Compare && (control_filtro_dq_mod2_DW.Integrator_PrevResetState <= 0)) {
        control_filtro_dq_mod2_DW.Integrator_DSTATE = control_filtro_dq_mod2_B.Initial;
    }
    control_filtro_dq_mod2_B.Integrator = control_filtro_dq_mod2_DW.Integrator_DSTATE;
    /* End of DiscreteIntegrator: '<S329>/Integrator' */

    /* Fcn: '<S319>/d' */
    rtb_donotdeletethisgain_n = (sin((control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) - 2.0943951023931953) * rtb_Kv[1] + sin(control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) * rtb_Kv[0]) + sin((control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) + 2.0943951023931953) * rtb_Kv[2];
    /* Fcn: '<S319>/q' */
    rtb_Sum2 = (cos((control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) - 2.0943951023931953) * rtb_Kv[1] + cos(control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) * rtb_Kv[0]) + cos((control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) + 2.0943951023931953) * rtb_Kv[2];
    /* Gain: '<S319>/Gain1' incorporates:
 *  Fcn: '<S319>/0'
 */
    control_filtro_dq_mod2_B.Gain1[0] = control_filtro_dq_mod2_P.Gain1_Gain_df * rtb_donotdeletethisgain_n;
    control_filtro_dq_mod2_B.Gain1[1] = control_filtro_dq_mod2_P.Gain1_Gain_df * rtb_Sum2;
    control_filtro_dq_mod2_B.Gain1[2] = ((rtb_Kv[0] + rtb_Kv[1]) + rtb_Kv[2]) * 0.70710678118654746 * control_filtro_dq_mod2_P.Gain1_Gain_df;
    /* Constant: '<S10>/Constant' */
    control_filtro_dq_mod2_B.Constant_k = control_filtro_dq_mod2_P.Constant_Value_b;
}
/* Clock: '<Root>/Clock6' */
rtb_Clock6 = %<(SLibCG_SE(LibGetT()))>;
/* Product: '<S331>/Product4' incorporates:
 *  Integrator: '<S331>/Integrator1'
 */
rtb_Product4 = control_filtro_dq_mod2_B.Constant_k * control_filtro_dq_mod2_X.Integrator1_CSTATE;
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Gain: '<S46>/do not delete this gain' */
    rtb_donotdeletethisgain_n = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_lc * control_filtro_dq_mod2_B.StateSpace_o1[79];
    /* Sum: '<S10>/Sum2' incorporates:
 *  Constant: '<S10>/Constant2'
 */
    rtb_Sum2 = control_filtro_dq_mod2_P.Vdc - rtb_donotdeletethisgain_n;
    /* Sum: '<S317>/Sum' incorporates:
 *  DiscreteIntegrator: '<S317>/Integrator'
 *  Gain: '<S317>/Proportional Gain'
 */
    control_filtro_dq_mod2_B.Sum = control_filtro_dq_mod2_P.DiscretePIDController_P * rtb_Sum2 + control_filtro_dq_mod2_DW.Integrator_DSTATE_o;
    /* Constant: '<S10>/Constant1' */
    control_filtro_dq_mod2_B.Constant1 = control_filtro_dq_mod2_P.Constant1_Value;
}
/* Sum: '<S10>/Sum1' incorporates:
 *  Sum: '<S331>/Sum2'
 */
AC_tmp = control_filtro_dq_mod2_B.Gain1[0] - rtb_Product4;
/* Sum: '<S10>/Sum7' incorporates:
 *  Sum: '<S10>/Sum1'
 */
rtb_c = AC_tmp - control_filtro_dq_mod2_B.Sum;
/* Product: '<S332>/Product4' incorporates:
 *  Integrator: '<S332>/Integrator1'
 */
rtb_Product4_g = control_filtro_dq_mod2_B.Constant1 * control_filtro_dq_mod2_X.Integrator1_CSTATE_l;
/* Sum: '<S10>/Sum3' incorporates:
 *  Sum: '<S332>/Sum2'
 */
rtb_Sum3_tmp = control_filtro_dq_mod2_B.Gain1[1] - rtb_Product4_g;
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S10>/Constant3' */
    control_filtro_dq_mod2_B.Constant3 = control_filtro_dq_mod2_P.Constant3_Value;
    /* Gain: '<S366>/do not delete this gain' */
    rtb_donotdeletethisgain_eb = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_m * control_filtro_dq_mod2_B.StateSpace_o1[89];
    /* Gain: '<S367>/do not delete this gain' */
    rtb_donotdeletethisgain_f = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_lq * control_filtro_dq_mod2_B.StateSpace_o1[90];
    /* Gain: '<S368>/do not delete this gain' */
    rtb_donotdeletethisgain_ex = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_g * control_filtro_dq_mod2_B.StateSpace_o1[91];
    /* Gain: '<S12>/Kv' */
    control_filtro_dq_mod2_B.Kv[0] = control_filtro_dq_mod2_P.Kv_Gain_n * rtb_donotdeletethisgain_eb;
    control_filtro_dq_mod2_B.Kv[1] = control_filtro_dq_mod2_P.Kv_Gain_n * rtb_donotdeletethisgain_f;
    control_filtro_dq_mod2_B.Kv[2] = control_filtro_dq_mod2_P.Kv_Gain_n * rtb_donotdeletethisgain_ex;
    /* Gain: '<S293>/do not delete this gain' */
    rtb_donotdeletethisgain_ex = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_lw * control_filtro_dq_mod2_B.StateSpace_o1[67];
    /* Gain: '<S294>/do not delete this gain' */
    rtb_donotdeletethisgain_f = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_ah * control_filtro_dq_mod2_B.StateSpace_o1[69];
    /* Gain: '<S295>/do not delete this gain' */
    rtb_donotdeletethisgain_eb = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_f * control_filtro_dq_mod2_B.StateSpace_o1[70];
    /* Gain: '<S8>/Kv1' */
    control_filtro_dq_mod2_B.Kv1[0] = control_filtro_dq_mod2_P.Kv1_Gain * rtb_donotdeletethisgain_ex;
    control_filtro_dq_mod2_B.Kv1[1] = control_filtro_dq_mod2_P.Kv1_Gain * rtb_donotdeletethisgain_f;
    control_filtro_dq_mod2_B.Kv1[2] = control_filtro_dq_mod2_P.Kv1_Gain * rtb_donotdeletethisgain_eb;
}
/* Product: '<S333>/Product4' incorporates:
 *  Integrator: '<S333>/Integrator1'
 */
rtb_Product4_m = control_filtro_dq_mod2_B.Constant3 * control_filtro_dq_mod2_X.Integrator1_CSTATE_f;
/* Sum: '<S10>/Sum4' incorporates:
 *  Sum: '<S333>/Sum2'
 */
rtb_Sum4_tmp = control_filtro_dq_mod2_B.Gain1[2] - rtb_Product4_m;
/* Fcn: '<S318>/a' incorporates:
 *  Sum: '<S10>/Sum3'
 *  Sum: '<S10>/Sum4'
 */
rtb_Gain2 = (sin(control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) * rtb_c + cos(control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) * rtb_Sum3_tmp) + 0.70710678118654746 * rtb_Sum4_tmp;
/* Fcn: '<S318>/b' incorporates:
 *  Sum: '<S10>/Sum3'
 *  Sum: '<S10>/Sum4'
 */
rtb_Integrator2 = (sin((control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) - 2.0943951023931953) * rtb_c + cos((control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) - 2.0943951023931953) * rtb_Sum3_tmp) + 0.70710678118654746 * rtb_Sum4_tmp;
/* Fcn: '<S318>/c' incorporates:
 *  Sum: '<S10>/Sum3'
 *  Sum: '<S10>/Sum4'
 */
rtb_c = (sin((control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) + 2.0943951023931953) * rtb_c + cos((control_filtro_dq_mod2_B.Integrator + 1.5707963267948966) + 2.0943951023931953) * rtb_Sum3_tmp) + 0.70710678118654746 * rtb_Sum4_tmp;
/* Gain: '<S318>/Gain1' */
control_filtro_dq_mod2_B.Gain1_i[0] = control_filtro_dq_mod2_P.Gain1_Gain_f * rtb_Gain2;
control_filtro_dq_mod2_B.Gain1_i[1] = control_filtro_dq_mod2_P.Gain1_Gain_f * rtb_Integrator2;
control_filtro_dq_mod2_B.Gain1_i[2] = control_filtro_dq_mod2_P.Gain1_Gain_f * rtb_c;
%if !WHITE_SPACE(tlcOutputsFcnOfS11B37)
/* MATLABFcn: '<Root>/MBPC' */
%<tlcOutputsFcnOfS11B37>\
%endif
/* Gain: '<S7>/Gain' incorporates:
 *  Gain: '<S7>/Gain1'
 *  Gain: '<S7>/Gain2'
 */
rtb_c = 1.0 / (3.0 * control_filtro_dq_mod2_P.Vdc);
control_filtro_dq_mod2_B.Gain = rtb_c * control_filtro_dq_mod2_B.MBPC[0];
/* DataTypeConversion: '<S260>/Data Type Conversion' incorporates:
 *  Clock: '<S269>/Clock'
 *  Lookup_n-D: '<S269>/Look-Up Table1'
 *  Math: '<S269>/Math Function'
 *  RelationalOperator: '<S260>/Relational Operator'
 *  S-Function (sfun_tstart): '<S269>/startTime'
 *  Sum: '<S269>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 34, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant"], 0, 4, 0))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y, 2U) <= control_filtro_dq_mod2_B.Gain);
/* DataTypeConversion: '<S79>/Data Type Conversion' incorporates:
 *  Logic: '<S40>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_p = !(control_filtro_dq_mod2_B.DataTypeConversion != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B44)
/* S-Function (sfun_tstart): '<S270>/startTime' */
%<tlcOutputsFcnOfS11B44>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S270>/Constant' */
    control_filtro_dq_mod2_B.Constant_b = control_filtro_dq_mod2_P.Constant_Value_d;
}
/* DataTypeConversion: '<S260>/Data Type Conversion3' incorporates:
 *  Clock: '<S270>/Clock'
 *  Lookup_n-D: '<S270>/Look-Up Table1'
 *  Math: '<S270>/Math Function'
 *  RelationalOperator: '<S260>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S270>/startTime'
 *  Sum: '<S270>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3 = (control_filtro_dq_mod2_B.Gain <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 44, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_b"], 0, 4, 1))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_f, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y, 2U));
/* DataTypeConversion: '<S83>/Data Type Conversion' incorporates:
 *  Logic: '<S40>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_g = !(control_filtro_dq_mod2_B.DataTypeConversion3 != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B55)
/* S-Function (sfun_tstart): '<S271>/startTime' */
%<tlcOutputsFcnOfS11B55>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S271>/Constant' */
    control_filtro_dq_mod2_B.Constant_h = control_filtro_dq_mod2_P.Constant_Value_p;
}
/* DataTypeConversion: '<S261>/Data Type Conversion' incorporates:
 *  Clock: '<S271>/Clock'
 *  Lookup_n-D: '<S271>/Look-Up Table1'
 *  Math: '<S271>/Math Function'
 *  RelationalOperator: '<S261>/Relational Operator'
 *  S-Function (sfun_tstart): '<S271>/startTime'
 *  Sum: '<S271>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion_i = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 55, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_h"], 0, 4, 2))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_h, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y_i, 2U) <= control_filtro_dq_mod2_B.Gain);
/* DataTypeConversion: '<S91>/Data Type Conversion' incorporates:
 *  Logic: '<S41>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_f = !(control_filtro_dq_mod2_B.DataTypeConversion_i != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B62)
/* S-Function (sfun_tstart): '<S272>/startTime' */
%<tlcOutputsFcnOfS11B62>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S272>/Constant' */
    control_filtro_dq_mod2_B.Constant_g = control_filtro_dq_mod2_P.Constant_Value_dp;
}
/* DataTypeConversion: '<S261>/Data Type Conversion3' incorporates:
 *  Clock: '<S272>/Clock'
 *  Lookup_n-D: '<S272>/Look-Up Table1'
 *  Math: '<S272>/Math Function'
 *  RelationalOperator: '<S261>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S272>/startTime'
 *  Sum: '<S272>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3_e = (control_filtro_dq_mod2_B.Gain <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 62, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_g"], 0, 4, 3))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_b, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y_p, 2U));
/* DataTypeConversion: '<S95>/Data Type Conversion' incorporates:
 *  Logic: '<S41>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_h = !(control_filtro_dq_mod2_B.DataTypeConversion3_e != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B73)
/* S-Function (sfun_tstart): '<S273>/startTime' */
%<tlcOutputsFcnOfS11B73>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S273>/Constant' */
    control_filtro_dq_mod2_B.Constant_f = control_filtro_dq_mod2_P.Constant_Value_n;
}
/* DataTypeConversion: '<S262>/Data Type Conversion' incorporates:
 *  Clock: '<S273>/Clock'
 *  Lookup_n-D: '<S273>/Look-Up Table1'
 *  Math: '<S273>/Math Function'
 *  RelationalOperator: '<S262>/Relational Operator'
 *  S-Function (sfun_tstart): '<S273>/startTime'
 *  Sum: '<S273>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion_j = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 73, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_f"], 0, 4, 4))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_j, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y_e, 2U) <= control_filtro_dq_mod2_B.Gain);
/* DataTypeConversion: '<S103>/Data Type Conversion' incorporates:
 *  Logic: '<S42>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_d = !(control_filtro_dq_mod2_B.DataTypeConversion_j != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B80)
/* S-Function (sfun_tstart): '<S274>/startTime' */
%<tlcOutputsFcnOfS11B80>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S274>/Constant' */
    control_filtro_dq_mod2_B.Constant_l = control_filtro_dq_mod2_P.Constant_Value_e;
    /* DataTypeConversion: '<S50>/Data Type Conversion' incorporates:
 *  Constant: '<S34>/Constant'
 *  Logic: '<S34>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_dm = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* DataTypeConversion: '<S60>/Data Type Conversion' incorporates:
 *  Constant: '<S35>/Constant'
 *  Logic: '<S35>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_k = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* Gain: '<S56>/do not delete this gain' */
    rtb_donotdeletethisgain_ex = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_h * control_filtro_dq_mod2_B.StateSpace_o1[76];
    /* DataTypeConversion: '<S70>/Data Type Conversion' incorporates:
 *  Constant: '<S36>/Constant'
 *  Logic: '<S36>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_c = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* Gain: '<S66>/do not delete this gain' */
    rtb_donotdeletethisgain_f = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_j * control_filtro_dq_mod2_B.StateSpace_o1[73];
}
/* DataTypeConversion: '<S262>/Data Type Conversion3' incorporates:
 *  Clock: '<S274>/Clock'
 *  Lookup_n-D: '<S274>/Look-Up Table1'
 *  Math: '<S274>/Math Function'
 *  RelationalOperator: '<S262>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S274>/startTime'
 *  Sum: '<S274>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3_l = (control_filtro_dq_mod2_B.Gain <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 80, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_l"], 0, 4, 5))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_d, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y_g, 2U));
/* DataTypeConversion: '<S107>/Data Type Conversion' incorporates:
 *  Logic: '<S42>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_fx = !(control_filtro_dq_mod2_B.DataTypeConversion3_l != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B141)
/* S-Function (sfun_tstart): '<S275>/startTime' */
%<tlcOutputsFcnOfS11B141>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S275>/Constant' */
    control_filtro_dq_mod2_B.Constant_n = control_filtro_dq_mod2_P.Constant_Value_o;
}
/* Gain: '<S7>/Gain1' */
rtb_Gain2 = rtb_c * control_filtro_dq_mod2_B.MBPC[1];
/* DataTypeConversion: '<S263>/Data Type Conversion' incorporates:
 *  Clock: '<S275>/Clock'
 *  Lookup_n-D: '<S275>/Look-Up Table1'
 *  Math: '<S275>/Math Function'
 *  RelationalOperator: '<S263>/Relational Operator'
 *  S-Function (sfun_tstart): '<S275>/startTime'
 *  Sum: '<S275>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion_a = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 141, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_n"], 0, 4, 6))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_p, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y_b, 2U) <= rtb_Gain2);
/* DataTypeConversion: '<S154>/Data Type Conversion' incorporates:
 *  Logic: '<S115>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_o = !(control_filtro_dq_mod2_B.DataTypeConversion_a != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B148)
/* S-Function (sfun_tstart): '<S276>/startTime' */
%<tlcOutputsFcnOfS11B148>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S276>/Constant' */
    control_filtro_dq_mod2_B.Constant_m = control_filtro_dq_mod2_P.Constant_Value_d1;
}
/* DataTypeConversion: '<S263>/Data Type Conversion3' incorporates:
 *  Clock: '<S276>/Clock'
 *  Lookup_n-D: '<S276>/Look-Up Table1'
 *  Math: '<S276>/Math Function'
 *  RelationalOperator: '<S263>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S276>/startTime'
 *  Sum: '<S276>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3_a = (rtb_Gain2 <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 148, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_m"], 0, 4, 7))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_fb, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y_a, 2U));
/* DataTypeConversion: '<S158>/Data Type Conversion' incorporates:
 *  Logic: '<S115>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_c5 = !(control_filtro_dq_mod2_B.DataTypeConversion3_a != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B159)
/* S-Function (sfun_tstart): '<S277>/startTime' */
%<tlcOutputsFcnOfS11B159>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S277>/Constant' */
    control_filtro_dq_mod2_B.Constant_e = control_filtro_dq_mod2_P.Constant_Value_i;
}
/* DataTypeConversion: '<S264>/Data Type Conversion' incorporates:
 *  Clock: '<S277>/Clock'
 *  Lookup_n-D: '<S277>/Look-Up Table1'
 *  Math: '<S277>/Math Function'
 *  RelationalOperator: '<S264>/Relational Operator'
 *  S-Function (sfun_tstart): '<S277>/startTime'
 *  Sum: '<S277>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion_dd = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 159, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_e"], 0, 4, 8))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_bl, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y_g, 2U) <= rtb_Gain2);
/* DataTypeConversion: '<S166>/Data Type Conversion' incorporates:
 *  Logic: '<S116>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_b = !(control_filtro_dq_mod2_B.DataTypeConversion_dd != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B166)
/* S-Function (sfun_tstart): '<S278>/startTime' */
%<tlcOutputsFcnOfS11B166>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S278>/Constant' */
    control_filtro_dq_mod2_B.Constant_d = control_filtro_dq_mod2_P.Constant_Value_dh;
}
/* DataTypeConversion: '<S264>/Data Type Conversion3' incorporates:
 *  Clock: '<S278>/Clock'
 *  Lookup_n-D: '<S278>/Look-Up Table1'
 *  Math: '<S278>/Math Function'
 *  RelationalOperator: '<S264>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S278>/startTime'
 *  Sum: '<S278>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3_n = (rtb_Gain2 <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 166, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_d"], 0, 4, 9))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_dg, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y_c, 2U));
/* DataTypeConversion: '<S170>/Data Type Conversion' incorporates:
 *  Logic: '<S116>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_m = !(control_filtro_dq_mod2_B.DataTypeConversion3_n != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B177)
/* S-Function (sfun_tstart): '<S279>/startTime' */
%<tlcOutputsFcnOfS11B177>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S279>/Constant' */
    control_filtro_dq_mod2_B.Constant_ld = control_filtro_dq_mod2_P.Constant_Value_em;
}
/* DataTypeConversion: '<S265>/Data Type Conversion' incorporates:
 *  Clock: '<S279>/Clock'
 *  Lookup_n-D: '<S279>/Look-Up Table1'
 *  Math: '<S279>/Math Function'
 *  RelationalOperator: '<S265>/Relational Operator'
 *  S-Function (sfun_tstart): '<S279>/startTime'
 *  Sum: '<S279>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion_n = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 177, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_ld"], 0, 4, 10))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_pe, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y_b2, 2U) <= rtb_Gain2);
/* DataTypeConversion: '<S178>/Data Type Conversion' incorporates:
 *  Logic: '<S117>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_ji = !(control_filtro_dq_mod2_B.DataTypeConversion_n != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B184)
/* S-Function (sfun_tstart): '<S280>/startTime' */
%<tlcOutputsFcnOfS11B184>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S280>/Constant' */
    control_filtro_dq_mod2_B.Constant_a = control_filtro_dq_mod2_P.Constant_Value_k;
    /* DataTypeConversion: '<S125>/Data Type Conversion' incorporates:
 *  Constant: '<S109>/Constant'
 *  Logic: '<S109>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_io = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* Gain: '<S121>/do not delete this gain' */
    rtb_donotdeletethisgain_eb = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_o * control_filtro_dq_mod2_B.StateSpace_o1[80];
    /* DataTypeConversion: '<S135>/Data Type Conversion' incorporates:
 *  Constant: '<S110>/Constant'
 *  Logic: '<S110>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_gs = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* Gain: '<S131>/do not delete this gain' */
    rtb_donotdeletethisgain = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_b * control_filtro_dq_mod2_B.StateSpace_o1[77];
    /* DataTypeConversion: '<S145>/Data Type Conversion' incorporates:
 *  Constant: '<S111>/Constant'
 *  Logic: '<S111>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_i2 = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* Gain: '<S141>/do not delete this gain' */
    rtb_donotdeletethisgain_h = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_d * control_filtro_dq_mod2_B.StateSpace_o1[74];
}
/* DataTypeConversion: '<S265>/Data Type Conversion3' incorporates:
 *  Clock: '<S280>/Clock'
 *  Lookup_n-D: '<S280>/Look-Up Table1'
 *  Math: '<S280>/Math Function'
 *  RelationalOperator: '<S265>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S280>/startTime'
 *  Sum: '<S280>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3_d = (rtb_Gain2 <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 184, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_a"], 0, 4, 11))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_j3, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y_c5, 2U));
/* DataTypeConversion: '<S182>/Data Type Conversion' incorporates:
 *  Logic: '<S117>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_ft = !(control_filtro_dq_mod2_B.DataTypeConversion3_d != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B245)
/* S-Function (sfun_tstart): '<S281>/startTime' */
%<tlcOutputsFcnOfS11B245>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S281>/Constant' */
    control_filtro_dq_mod2_B.Constant_n1 = control_filtro_dq_mod2_P.Constant_Value_dl;
}
/* Gain: '<S7>/Gain2' */
rtb_Gain2 = rtb_c * control_filtro_dq_mod2_B.MBPC[2];
/* DataTypeConversion: '<S266>/Data Type Conversion' incorporates:
 *  Clock: '<S281>/Clock'
 *  Lookup_n-D: '<S281>/Look-Up Table1'
 *  Math: '<S281>/Math Function'
 *  RelationalOperator: '<S266>/Relational Operator'
 *  S-Function (sfun_tstart): '<S281>/startTime'
 *  Sum: '<S281>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion_if = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 245, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_n1"], 0, 4, 12))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_e, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y_a, 2U) <= rtb_Gain2);
/* DataTypeConversion: '<S229>/Data Type Conversion' incorporates:
 *  Logic: '<S190>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_ic = !(control_filtro_dq_mod2_B.DataTypeConversion_if != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B252)
/* S-Function (sfun_tstart): '<S282>/startTime' */
%<tlcOutputsFcnOfS11B252>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S282>/Constant' */
    control_filtro_dq_mod2_B.Constant_eq = control_filtro_dq_mod2_P.Constant_Value_f;
}
/* DataTypeConversion: '<S266>/Data Type Conversion3' incorporates:
 *  Clock: '<S282>/Clock'
 *  Lookup_n-D: '<S282>/Look-Up Table1'
 *  Math: '<S282>/Math Function'
 *  RelationalOperator: '<S266>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S282>/startTime'
 *  Sum: '<S282>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3_dn = (rtb_Gain2 <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 252, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_eq"], 0, 4, 13))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_n, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y_e, 2U));
/* DataTypeConversion: '<S233>/Data Type Conversion' incorporates:
 *  Logic: '<S190>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_i0 = !(control_filtro_dq_mod2_B.DataTypeConversion3_dn != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B263)
/* S-Function (sfun_tstart): '<S283>/startTime' */
%<tlcOutputsFcnOfS11B263>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S283>/Constant' */
    control_filtro_dq_mod2_B.Constant_o = control_filtro_dq_mod2_P.Constant_Value_a;
}
/* DataTypeConversion: '<S267>/Data Type Conversion' incorporates:
 *  Clock: '<S283>/Clock'
 *  Lookup_n-D: '<S283>/Look-Up Table1'
 *  Math: '<S283>/Math Function'
 *  RelationalOperator: '<S267>/Relational Operator'
 *  S-Function (sfun_tstart): '<S283>/startTime'
 *  Sum: '<S283>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion_bo = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 263, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_o"], 0, 4, 14))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_ng, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y_ib, 2U) <= rtb_Gain2);
/* DataTypeConversion: '<S241>/Data Type Conversion' incorporates:
 *  Logic: '<S191>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_mk = !(control_filtro_dq_mod2_B.DataTypeConversion_bo != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B270)
/* S-Function (sfun_tstart): '<S284>/startTime' */
%<tlcOutputsFcnOfS11B270>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S284>/Constant' */
    control_filtro_dq_mod2_B.Constant_j = control_filtro_dq_mod2_P.Constant_Value_fc;
}
/* DataTypeConversion: '<S267>/Data Type Conversion3' incorporates:
 *  Clock: '<S284>/Clock'
 *  Lookup_n-D: '<S284>/Look-Up Table1'
 *  Math: '<S284>/Math Function'
 *  RelationalOperator: '<S267>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S284>/startTime'
 *  Sum: '<S284>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3_ab = (rtb_Gain2 <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 270, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_j"], 0, 4, 15))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_ex, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y_o, 2U));
/* DataTypeConversion: '<S245>/Data Type Conversion' incorporates:
 *  Logic: '<S191>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_l = !(control_filtro_dq_mod2_B.DataTypeConversion3_ab != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B281)
/* S-Function (sfun_tstart): '<S285>/startTime' */
%<tlcOutputsFcnOfS11B281>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S285>/Constant' */
    control_filtro_dq_mod2_B.Constant_gi = control_filtro_dq_mod2_P.Constant_Value_fx;
}
/* DataTypeConversion: '<S268>/Data Type Conversion' incorporates:
 *  Clock: '<S285>/Clock'
 *  Lookup_n-D: '<S285>/Look-Up Table1'
 *  Math: '<S285>/Math Function'
 *  RelationalOperator: '<S268>/Relational Operator'
 *  S-Function (sfun_tstart): '<S285>/startTime'
 *  Sum: '<S285>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion_lw = (look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 281, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_gi"], 0, 4, 16))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_m, control_filtro_dq_mod2_P.RepeatingSequence1_rep_seq_y_n, 2U) <= rtb_Gain2);
/* DataTypeConversion: '<S253>/Data Type Conversion' incorporates:
 *  Logic: '<S192>/Logical Operator2'
 */
control_filtro_dq_mod2_B.DataTypeConversion_ju = !(control_filtro_dq_mod2_B.DataTypeConversion_lw != 0.0);
%if !WHITE_SPACE(tlcOutputsFcnOfS11B288)
/* S-Function (sfun_tstart): '<S286>/startTime' */
%<tlcOutputsFcnOfS11B288>\
%endif
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* Constant: '<S286>/Constant' */
    control_filtro_dq_mod2_B.Constant_ek = control_filtro_dq_mod2_P.Constant_Value_at;
}
/* DataTypeConversion: '<S268>/Data Type Conversion3' incorporates:
 *  Clock: '<S286>/Clock'
 *  Lookup_n-D: '<S286>/Look-Up Table1'
 *  Math: '<S286>/Math Function'
 *  RelationalOperator: '<S268>/Relational Operator2'
 *  S-Function (sfun_tstart): '<S286>/startTime'
 *  Sum: '<S286>/Sum'
 */
control_filtro_dq_mod2_B.DataTypeConversion3_j = (rtb_Gain2 <= look1_binlxpw(%<(SLibCGCallSubFcn("rt_remd_snf", ["%<(SLibCG_SE(LibGetT()))> - %<(SLibCG_SE(SLibCG_Expr(11, 288, 0, 1, "", -1, "", 0)))>", "control_filtro_dq_mod2_B.Constant_ek"], 0, 4, 17))>, control_filtro_dq_mod2_P.LookUpTable1_bp01Data_p4, control_filtro_dq_mod2_P.RepeatingSequence2_rep_seq_y_ee, 2U));
/* DataTypeConversion: '<S257>/Data Type Conversion' incorporates:
 *  Logic: '<S192>/Logical Operator3'
 */
control_filtro_dq_mod2_B.DataTypeConversion_oy = !(control_filtro_dq_mod2_B.DataTypeConversion3_j != 0.0);
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    /* DataTypeConversion: '<S200>/Data Type Conversion' incorporates:
 *  Constant: '<S184>/Constant'
 *  Logic: '<S184>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_kw = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* Gain: '<S196>/do not delete this gain' */
    rtb_donotdeletethisgain_b = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_gv * control_filtro_dq_mod2_B.StateSpace_o1[81];
    /* DataTypeConversion: '<S210>/Data Type Conversion' incorporates:
 *  Constant: '<S185>/Constant'
 *  Logic: '<S185>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_li = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* Gain: '<S206>/do not delete this gain' */
    rtb_donotdeletethisgain_o = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_mx * control_filtro_dq_mod2_B.StateSpace_o1[78];
    /* DataTypeConversion: '<S220>/Data Type Conversion' incorporates:
 *  Constant: '<S186>/Constant'
 *  Logic: '<S186>/Logical Operator2'
 */
    control_filtro_dq_mod2_B.DataTypeConversion_bu = !(control_filtro_dq_mod2_P.Ideal != 0.0);
    /* Gain: '<S216>/do not delete this gain' */
    rtb_donotdeletethisgain_e = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_hf * control_filtro_dq_mod2_B.StateSpace_o1[75];
    /* Gain: '<S292>/do not delete this gain' */
    rtb_d = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_i * control_filtro_dq_mod2_B.StateSpace_o1[86];
    /* Gain: '<S8>/Kv' incorporates:
 *  Gain: '<S290>/do not delete this gain'
 *  Gain: '<S291>/do not delete this gain'
 */
    rtb_Kv_b[0] = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_p * control_filtro_dq_mod2_B.StateSpace_o1[83] * control_filtro_dq_mod2_P.Kv_Gain_g;
    rtb_Kv_b[1] = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_bt * control_filtro_dq_mod2_B.StateSpace_o1[85] * control_filtro_dq_mod2_P.Kv_Gain_g;
    rtb_Kv_b[2] = control_filtro_dq_mod2_P.Kv_Gain_g * rtb_d;
    /* Gain: '<S6>/do not delete this gain' */
    rtb_d = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_fd * control_filtro_dq_mod2_B.StateSpace_o1[82];
%if !WHITE_SPACE(tlcOutputsFcnOfS11B351)
    /* Scope: '<Root>/Scope' */
%<tlcOutputsFcnOfS11B351>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS11B352)
    /* Scope: '<Root>/Scope1' */
%<tlcOutputsFcnOfS11B352>\
%endif
    /* Outputs for Enabled SubSystem: '<S335>/TrueRMS ' incorporates:
 *  EnablePort: '<S340>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        /* DataTypeConversion: '<S335>/Data Type Conversion' incorporates:
 *  Constant: '<S335>/Constant'
 */
        if (control_filtro_dq_mod2_P.RMS1_TrueRMS != 0.0) {
            if (!control_filtro_dq_mod2_DW.TrueRMS_MODE_i) {
                /* Enable for DiscreteIntegrator: '<S349>/Integ4' */
                control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_a = 1U;
                control_filtro_dq_mod2_DW.TrueRMS_MODE_i = true;
            }
        } else {
            if (control_filtro_dq_mod2_DW.TrueRMS_MODE_i) {
                /* Disable for DiscreteIntegrator: '<S349>/Integ4' */
                for (i = 0; i < 6; i++) {
                    control_filtro_dq_mod2_DW.Integ4_DSTATE_m[i] = control_filtro_dq_mod2_B.Integ4_g[i];
                }
                /* End of Disable for DiscreteIntegrator: '<S349>/Integ4' */
                control_filtro_dq_mod2_DW.TrueRMS_MODE_i = false;
            }
        }
    }
    if (control_filtro_dq_mod2_DW.TrueRMS_MODE_i) {
        /* Product: '<S340>/Product' */
        rtb_Product_p[0] = rtb_Kv_b[0] * rtb_Kv_b[0];
        rtb_Product_p[3] = rtb_Kv[0] * rtb_Kv[0];
        rtb_Product_p[1] = rtb_Kv_b[1] * rtb_Kv_b[1];
        rtb_Product_p[4] = rtb_Kv[1] * rtb_Kv[1];
        rtb_Product_p[2] = rtb_Kv_b[2] * rtb_Kv_b[2];
        rtb_Product_p[5] = rtb_Kv[2] * rtb_Kv[2];
        /* DiscreteIntegrator: '<S349>/Integ4' */
        for (i = 0; i < 6; i++) {
            if (control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_a != 0) {
                control_filtro_dq_mod2_B.Integ4_g[i] = control_filtro_dq_mod2_DW.Integ4_DSTATE_m[i];
            } else {
                control_filtro_dq_mod2_B.Integ4_g[i] = control_filtro_dq_mod2_P.Integ4_gainval_d * rtb_Product_p[i] + control_filtro_dq_mod2_DW.Integ4_DSTATE_m[i];
            }
        }
        /* End of DiscreteIntegrator: '<S349>/Integ4' */

        /* Constant: '<S349>/K1' */
        control_filtro_dq_mod2_B.K1_c = control_filtro_dq_mod2_P.K1_Value_d;
%if !WHITE_SPACE(tlcOutputsFcnOfS5B0)
        /* S-Function (sfun_discreteVariableDelay): '<S350>/S-Function' */
%<tlcOutputsFcnOfS5B0>\
%endif
        /* Switch: '<S349>/Switch' incorporates:
 *  Constant: '<S349>/K2'
 *  DigitalClock: '<S349>/Digital  Clock'
 *  Gain: '<S349>/Gain'
 *  Gain: '<S349>/Gain1'
 *  Product: '<S349>/Product'
 *  RelationalOperator: '<S349>/Relational Operator'
 *  Sum: '<S349>/Sum1'
 *  Sum: '<S349>/Sum5'
 *  Sum: '<S349>/Sum7'
 *  UnitDelay: '<S349>/Unit Delay'
 *  UnitDelay: '<S349>/Unit Delay1'
 */
        if (%<(SLibCG_SE(LibGetTaskTime(1)))> >= control_filtro_dq_mod2_B.K1_c) {
            for (i = 0; i < 6; i++) {
                rtb_Switch_f[i] = (control_filtro_dq_mod2_B.Integ4_g[i] - control_filtro_dq_mod2_B.SFunction_gc[i]) * control_filtro_dq_mod2_P.K2_Value_f + (control_filtro_dq_mod2_P.Gain1_Gain_m * rtb_Product_p[i] - control_filtro_dq_mod2_P.Gain_Gain_l * control_filtro_dq_mod2_DW.UnitDelay_DSTATE_p[i]);
            }
        } else {
            for (i = 0; i < 6; i++) {
                rtb_Switch_f[i] = control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_l[i];
            }
        }
        /* End of Switch: '<S349>/Switch' */

        /* Update for DiscreteIntegrator: '<S349>/Integ4' */
        control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_a = 0U;
        for (i = 0; i < 6; i++) {
            /* Saturate: '<S340>/Saturation to avoid negative sqrt' */
            if (rtb_Switch_f[i] > control_filtro_dq_mod2_P.Saturationtoavoidnegativesqrt_U) {
                rtb_Gain2 = control_filtro_dq_mod2_P.Saturationtoavoidnegativesqrt_U;
            } else if (rtb_Switch_f[i] < control_filtro_dq_mod2_P.Saturationtoavoidnegativesqrt_L) {
                rtb_Gain2 = control_filtro_dq_mod2_P.Saturationtoavoidnegativesqrt_L;
            } else {
                rtb_Gain2 = rtb_Switch_f[i];
            }
            /* End of Saturate: '<S340>/Saturation to avoid negative sqrt' */

            /* Sqrt: '<S340>/Sqrt' */
            control_filtro_dq_mod2_B.Sqrt_h[i] = sqrt(rtb_Gain2);
            /* Update for DiscreteIntegrator: '<S349>/Integ4' */
            control_filtro_dq_mod2_DW.Integ4_DSTATE_m[i] = control_filtro_dq_mod2_P.Integ4_gainval_d * rtb_Product_p[i] + control_filtro_dq_mod2_B.Integ4_g[i];
        }
%if !WHITE_SPACE(tlcUpdateFcnOfS5B0)
        /* Update for S-Function (sfun_discreteVariableDelay): '<S350>/S-Function' */
%<tlcUpdateFcnOfS5B0>\
%endif
        for (i = 0; i < 6; i++) {
            /* Update for UnitDelay: '<S349>/Unit Delay' */
            control_filtro_dq_mod2_DW.UnitDelay_DSTATE_p[i] = rtb_Product_p[i];
            /* Update for UnitDelay: '<S349>/Unit Delay1' */
            control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_l[i] = rtb_Switch_f[i];
        }
    }
    /* End of Outputs for SubSystem: '<S335>/TrueRMS ' */

    /* Outputs for Enabled SubSystem: '<S335>/RMS ' incorporates:
 *  EnablePort: '<S339>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        /* Logic: '<S335>/Logical Operator' incorporates:
 *  Constant: '<S335>/Constant'
 *  DataTypeConversion: '<S335>/Data Type Conversion'
 */
        if (!(control_filtro_dq_mod2_P.RMS1_TrueRMS != 0.0)) {
            if (!control_filtro_dq_mod2_DW.RMS_MODE_i) {
                /* Enable for Sin: '<S341>/sin(wt)' */
                control_filtro_dq_mod2_DW.systemEnable_g = 1;
                /* Enable for DiscreteIntegrator: '<S346>/Integ4' */
                control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_k = 1U;
                /* Enable for Sin: '<S341>/cos(wt)' */
                control_filtro_dq_mod2_DW.systemEnable_h = 1;
                /* Enable for DiscreteIntegrator: '<S344>/Integ4' */
                control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_g = 1U;
                control_filtro_dq_mod2_DW.RMS_MODE_i = true;
            }
        } else {
            if (control_filtro_dq_mod2_DW.RMS_MODE_i) {
                for (i = 0; i < 6; i++) {
                    /* Disable for DiscreteIntegrator: '<S346>/Integ4' */
                    control_filtro_dq_mod2_DW.Integ4_DSTATE_h0[i] = control_filtro_dq_mod2_B.Integ4_g0[i];
                    /* Disable for DiscreteIntegrator: '<S344>/Integ4' */
                    control_filtro_dq_mod2_DW.Integ4_DSTATE_l[i] = control_filtro_dq_mod2_B.Integ4_e[i];
                }
                control_filtro_dq_mod2_DW.RMS_MODE_i = false;
            }
        }
        /* End of Logic: '<S335>/Logical Operator' */
    }
    if (control_filtro_dq_mod2_DW.RMS_MODE_i) {
        /* Sin: '<S341>/sin(wt)' */
        if (control_filtro_dq_mod2_DW.systemEnable_g != 0) {
            rtb_Gain2 = 6.2831853071795862 * control_filtro_dq_mod2_P.Fourier1_Freq * %<(SLibCG_SE(LibGetTaskTime(1)))>;
            control_filtro_dq_mod2_DW.lastSin_o = sin(rtb_Gain2);
            control_filtro_dq_mod2_DW.lastCos_b = cos(rtb_Gain2);
            control_filtro_dq_mod2_DW.systemEnable_g = 0;
        }
        rtb_c = ((control_filtro_dq_mod2_DW.lastSin_o * control_filtro_dq_mod2_P.sinwt_PCos + control_filtro_dq_mod2_DW.lastCos_b * control_filtro_dq_mod2_P.sinwt_PSin) * control_filtro_dq_mod2_P.sinwt_HCos + (control_filtro_dq_mod2_DW.lastCos_b * control_filtro_dq_mod2_P.sinwt_PCos - control_filtro_dq_mod2_DW.lastSin_o * control_filtro_dq_mod2_P.sinwt_PSin) * control_filtro_dq_mod2_P.sinwt_Hsin) * control_filtro_dq_mod2_P.sinwt_Amp + control_filtro_dq_mod2_P.sinwt_Bias;
        /* End of Sin: '<S341>/sin(wt)' */

        /* Product: '<S341>/Product' */
        rtb_Product_c[0] = rtb_Kv_b[0] * rtb_c;
        rtb_Product_c[3] = rtb_Kv[0] * rtb_c;
        rtb_Product_c[1] = rtb_Kv_b[1] * rtb_c;
        rtb_Product_c[4] = rtb_Kv[1] * rtb_c;
        rtb_Product_c[2] = rtb_Kv_b[2] * rtb_c;
        rtb_Product_c[5] = rtb_Kv[2] * rtb_c;
        /* DiscreteIntegrator: '<S346>/Integ4' */
        for (i = 0; i < 6; i++) {
            if (control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_k != 0) {
                control_filtro_dq_mod2_B.Integ4_g0[i] = control_filtro_dq_mod2_DW.Integ4_DSTATE_h0[i];
            } else {
                control_filtro_dq_mod2_B.Integ4_g0[i] = control_filtro_dq_mod2_P.Integ4_gainval * rtb_Product_c[i] + control_filtro_dq_mod2_DW.Integ4_DSTATE_h0[i];
            }
        }
        /* End of DiscreteIntegrator: '<S346>/Integ4' */

        /* Constant: '<S346>/K1' */
        control_filtro_dq_mod2_B.K1_k = control_filtro_dq_mod2_P.K1_Value;
%if !WHITE_SPACE(tlcOutputsFcnOfS3B0)
        /* S-Function (sfun_discreteVariableDelay): '<S347>/S-Function' */
%<tlcOutputsFcnOfS3B0>\
%endif
        /* Switch: '<S346>/Switch' incorporates:
 *  Constant: '<S346>/K2'
 *  DigitalClock: '<S346>/Digital  Clock'
 *  Gain: '<S346>/Gain'
 *  Gain: '<S346>/Gain1'
 *  Product: '<S346>/Product'
 *  RelationalOperator: '<S346>/Relational Operator'
 *  Sum: '<S346>/Sum1'
 *  Sum: '<S346>/Sum5'
 *  Sum: '<S346>/Sum7'
 *  UnitDelay: '<S346>/Unit Delay'
 *  UnitDelay: '<S346>/Unit Delay1'
 */
        if (%<(SLibCG_SE(LibGetTaskTime(1)))> >= control_filtro_dq_mod2_B.K1_k) {
            for (i = 0; i < 6; i++) {
                rtb_Switch_f[i] = (control_filtro_dq_mod2_B.Integ4_g0[i] - control_filtro_dq_mod2_B.SFunction_k[i]) * control_filtro_dq_mod2_P.K2_Value + (control_filtro_dq_mod2_P.Gain1_Gain_n * rtb_Product_c[i] - control_filtro_dq_mod2_P.Gain_Gain_m * control_filtro_dq_mod2_DW.UnitDelay_DSTATE_pe[i]);
            }
        } else {
            for (i = 0; i < 6; i++) {
                rtb_Switch_f[i] = control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_n[i];
            }
        }
        /* End of Switch: '<S346>/Switch' */

        /* Sin: '<S341>/cos(wt)' */
        if (control_filtro_dq_mod2_DW.systemEnable_h != 0) {
            control_filtro_dq_mod2_DW.lastSin_k = sin(6.2831853071795862 * control_filtro_dq_mod2_P.Fourier1_Freq * %<(SLibCG_SE(LibGetTaskTime(1)))>);
            control_filtro_dq_mod2_DW.lastCos_f = cos(6.2831853071795862 * control_filtro_dq_mod2_P.Fourier1_Freq * %<(SLibCG_SE(LibGetTaskTime(1)))>);
            control_filtro_dq_mod2_DW.systemEnable_h = 0;
        }
        rtb_c = ((control_filtro_dq_mod2_DW.lastSin_k * control_filtro_dq_mod2_P.coswt_PCos + control_filtro_dq_mod2_DW.lastCos_f * control_filtro_dq_mod2_P.coswt_PSin) * control_filtro_dq_mod2_P.coswt_HCos + (control_filtro_dq_mod2_DW.lastCos_f * control_filtro_dq_mod2_P.coswt_PCos - control_filtro_dq_mod2_DW.lastSin_k * control_filtro_dq_mod2_P.coswt_PSin) * control_filtro_dq_mod2_P.coswt_Hsin) * control_filtro_dq_mod2_P.coswt_Amp + control_filtro_dq_mod2_P.coswt_Bias;
        /* End of Sin: '<S341>/cos(wt)' */

        /* Product: '<S341>/Product1' */
        rtb_Product1_h[0] = rtb_Kv_b[0] * rtb_c;
        rtb_Product1_h[3] = rtb_Kv[0] * rtb_c;
        rtb_Product1_h[1] = rtb_Kv_b[1] * rtb_c;
        rtb_Product1_h[4] = rtb_Kv[1] * rtb_c;
        rtb_Product1_h[2] = rtb_Kv_b[2] * rtb_c;
        rtb_Product1_h[5] = rtb_Kv[2] * rtb_c;
        /* DiscreteIntegrator: '<S344>/Integ4' */
        for (i = 0; i < 6; i++) {
            if (control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_g != 0) {
                control_filtro_dq_mod2_B.Integ4_e[i] = control_filtro_dq_mod2_DW.Integ4_DSTATE_l[i];
            } else {
                control_filtro_dq_mod2_B.Integ4_e[i] = control_filtro_dq_mod2_P.Integ4_gainval_b * rtb_Product1_h[i] + control_filtro_dq_mod2_DW.Integ4_DSTATE_l[i];
            }
        }
        /* End of DiscreteIntegrator: '<S344>/Integ4' */

        /* Constant: '<S344>/K1' */
        control_filtro_dq_mod2_B.K1_e = control_filtro_dq_mod2_P.K1_Value_b;
%if !WHITE_SPACE(tlcOutputsFcnOfS3B3)
        /* S-Function (sfun_discreteVariableDelay): '<S345>/S-Function' */
%<tlcOutputsFcnOfS3B3>\
%endif
        /* Switch: '<S344>/Switch' incorporates:
 *  Constant: '<S344>/K2'
 *  DigitalClock: '<S344>/Digital  Clock'
 *  Gain: '<S344>/Gain'
 *  Gain: '<S344>/Gain1'
 *  Product: '<S344>/Product'
 *  RelationalOperator: '<S344>/Relational Operator'
 *  Sum: '<S344>/Sum1'
 *  Sum: '<S344>/Sum5'
 *  Sum: '<S344>/Sum7'
 *  UnitDelay: '<S344>/Unit Delay'
 *  UnitDelay: '<S344>/Unit Delay1'
 */
        if (%<(SLibCG_SE(LibGetTaskTime(1)))> >= control_filtro_dq_mod2_B.K1_e) {
            for (i = 0; i < 6; i++) {
                rtb_Switch_k[i] = (control_filtro_dq_mod2_B.Integ4_e[i] - control_filtro_dq_mod2_B.SFunction_e[i]) * control_filtro_dq_mod2_P.K2_Value_a + (control_filtro_dq_mod2_P.Gain1_Gain_j * rtb_Product1_h[i] - control_filtro_dq_mod2_P.Gain_Gain_f * control_filtro_dq_mod2_DW.UnitDelay_DSTATE_o[i]);
            }
        } else {
            for (i = 0; i < 6; i++) {
                rtb_Switch_k[i] = control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_ib[i];
            }
        }
        /* End of Switch: '<S344>/Switch' */

        /* Update for Sin: '<S341>/sin(wt)' */
        rtb_c = control_filtro_dq_mod2_DW.lastSin_o;
        control_filtro_dq_mod2_DW.lastSin_o = control_filtro_dq_mod2_DW.lastSin_o * control_filtro_dq_mod2_P.sinwt_HCos + control_filtro_dq_mod2_DW.lastCos_b * control_filtro_dq_mod2_P.sinwt_Hsin;
        control_filtro_dq_mod2_DW.lastCos_b = control_filtro_dq_mod2_DW.lastCos_b * control_filtro_dq_mod2_P.sinwt_HCos - rtb_c * control_filtro_dq_mod2_P.sinwt_Hsin;
        /* Update for DiscreteIntegrator: '<S346>/Integ4' */
        control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_k = 0U;
        for (i = 0; i < 6; i++) {
            /* Gain: '<S339>/Gain' incorporates:
 *  ComplexToMagnitudeAngle: '<S341>/Complex to Magnitude-Angle'
 *  RealImagToComplex: '<S341>/Real-Imag to Complex'
 */
            control_filtro_dq_mod2_B.Gain_a[i] = control_filtro_dq_mod2_P.Gain_Gain_h * %<(SLibCGCallSubFcn("rt_hypotd_snf", ["rtb_Switch_f[i]", "rtb_Switch_k[i]"], 0, 4, 18))>;
            /* Update for DiscreteIntegrator: '<S346>/Integ4' */
            control_filtro_dq_mod2_DW.Integ4_DSTATE_h0[i] = control_filtro_dq_mod2_P.Integ4_gainval * rtb_Product_c[i] + control_filtro_dq_mod2_B.Integ4_g0[i];
        }
%if !WHITE_SPACE(tlcUpdateFcnOfS3B0)
        /* Update for S-Function (sfun_discreteVariableDelay): '<S347>/S-Function' */
%<tlcUpdateFcnOfS3B0>\
%endif
        /* Update for Sin: '<S341>/cos(wt)' */
        rtb_c = control_filtro_dq_mod2_DW.lastSin_k;
        control_filtro_dq_mod2_DW.lastSin_k = control_filtro_dq_mod2_DW.lastSin_k * control_filtro_dq_mod2_P.coswt_HCos + control_filtro_dq_mod2_DW.lastCos_f * control_filtro_dq_mod2_P.coswt_Hsin;
        control_filtro_dq_mod2_DW.lastCos_f = control_filtro_dq_mod2_DW.lastCos_f * control_filtro_dq_mod2_P.coswt_HCos - rtb_c * control_filtro_dq_mod2_P.coswt_Hsin;
        /* Update for DiscreteIntegrator: '<S344>/Integ4' */
        control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_g = 0U;
        for (i = 0; i < 6; i++) {
            /* Update for UnitDelay: '<S346>/Unit Delay' */
            control_filtro_dq_mod2_DW.UnitDelay_DSTATE_pe[i] = rtb_Product_c[i];
            /* Update for UnitDelay: '<S346>/Unit Delay1' */
            control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_n[i] = rtb_Switch_f[i];
            /* Update for DiscreteIntegrator: '<S344>/Integ4' */
            control_filtro_dq_mod2_DW.Integ4_DSTATE_l[i] = control_filtro_dq_mod2_P.Integ4_gainval_b * rtb_Product1_h[i] + control_filtro_dq_mod2_B.Integ4_e[i];
        }
%if !WHITE_SPACE(tlcUpdateFcnOfS3B3)
        /* Update for S-Function (sfun_discreteVariableDelay): '<S345>/S-Function' */
%<tlcUpdateFcnOfS3B3>\
%endif
        for (i = 0; i < 6; i++) {
            /* Update for UnitDelay: '<S344>/Unit Delay' */
            control_filtro_dq_mod2_DW.UnitDelay_DSTATE_o[i] = rtb_Product1_h[i];
            /* Update for UnitDelay: '<S344>/Unit Delay1' */
            control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_ib[i] = rtb_Switch_k[i];
        }
    }
    /* End of Outputs for SubSystem: '<S335>/RMS ' */
    for (i = 0; i < 6; i++) {
        /* Switch: '<S335>/Switch' incorporates:
 *  Constant: '<S335>/Constant'
 *  DataTypeConversion: '<S335>/Data Type Conversion'
 */
        if (control_filtro_dq_mod2_P.RMS1_TrueRMS != 0.0) {
            rtb_Gain_f[i] = control_filtro_dq_mod2_B.Sqrt_h[i];
        } else {
            rtb_Gain_f[i] = control_filtro_dq_mod2_B.Gain_a[i];
        }
        /* End of Switch: '<S335>/Switch' */

        /* Math: '<S11>/Math Function' */
        rtb_Switch_f[i] = rtb_Gain_f[i] * rtb_Gain_f[i];
    }
    /* DiscreteIntegrator: '<S337>/Integ4' */
    if (control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE != 0) {
        control_filtro_dq_mod2_B.Integ4[0] = control_filtro_dq_mod2_DW.Integ4_DSTATE[0];
        control_filtro_dq_mod2_B.Integ4[3] = control_filtro_dq_mod2_DW.Integ4_DSTATE[3];
        control_filtro_dq_mod2_B.Integ4[1] = control_filtro_dq_mod2_DW.Integ4_DSTATE[1];
        control_filtro_dq_mod2_B.Integ4[4] = control_filtro_dq_mod2_DW.Integ4_DSTATE[4];
        control_filtro_dq_mod2_B.Integ4[2] = control_filtro_dq_mod2_DW.Integ4_DSTATE[2];
        control_filtro_dq_mod2_B.Integ4[5] = control_filtro_dq_mod2_DW.Integ4_DSTATE[5];
    } else {
        control_filtro_dq_mod2_B.Integ4[0] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv_b[0] + control_filtro_dq_mod2_DW.Integ4_DSTATE[0];
        control_filtro_dq_mod2_B.Integ4[3] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv[0] + control_filtro_dq_mod2_DW.Integ4_DSTATE[3];
        control_filtro_dq_mod2_B.Integ4[1] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv_b[1] + control_filtro_dq_mod2_DW.Integ4_DSTATE[1];
        control_filtro_dq_mod2_B.Integ4[4] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv[1] + control_filtro_dq_mod2_DW.Integ4_DSTATE[4];
        control_filtro_dq_mod2_B.Integ4[2] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv_b[2] + control_filtro_dq_mod2_DW.Integ4_DSTATE[2];
        control_filtro_dq_mod2_B.Integ4[5] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv[2] + control_filtro_dq_mod2_DW.Integ4_DSTATE[5];
    }
    /* End of DiscreteIntegrator: '<S337>/Integ4' */

    /* Constant: '<S337>/K1' */
    control_filtro_dq_mod2_B.K1 = control_filtro_dq_mod2_P.K1_Value_k;
%if !WHITE_SPACE(tlcOutputsFcnOfS11B356)
    /* S-Function (sfun_discreteVariableDelay): '<S338>/S-Function' */
%<tlcOutputsFcnOfS11B356>\
%endif
    /* DigitalClock: '<S337>/Digital  Clock' */
    rtb_d = %<(SLibCG_SE(LibGetTaskTime(1)))>;
    /* Switch: '<S337>/Switch' incorporates:
 *  Constant: '<S337>/K2'
 *  Gain: '<S337>/Gain'
 *  Gain: '<S337>/Gain1'
 *  Product: '<S337>/Product'
 *  RelationalOperator: '<S337>/Relational Operator'
 *  Sum: '<S337>/Sum1'
 *  Sum: '<S337>/Sum5'
 *  Sum: '<S337>/Sum7'
 *  UnitDelay: '<S337>/Unit Delay'
 *  UnitDelay: '<S337>/Unit Delay1'
 */
    if (rtb_d >= control_filtro_dq_mod2_B.K1) {
        rtb_Switch[0] = (control_filtro_dq_mod2_B.Integ4[0] - control_filtro_dq_mod2_B.SFunction[0]) * control_filtro_dq_mod2_P.K2_Value_e + (control_filtro_dq_mod2_P.Gain1_Gain * rtb_Kv_b[0] - control_filtro_dq_mod2_P.Gain_Gain * control_filtro_dq_mod2_DW.UnitDelay_DSTATE[0]);
        rtb_Switch[3] = (control_filtro_dq_mod2_B.Integ4[3] - control_filtro_dq_mod2_B.SFunction[3]) * control_filtro_dq_mod2_P.K2_Value_e + (control_filtro_dq_mod2_P.Gain1_Gain * rtb_Kv[0] - control_filtro_dq_mod2_P.Gain_Gain * control_filtro_dq_mod2_DW.UnitDelay_DSTATE[3]);
        rtb_Switch[1] = (control_filtro_dq_mod2_B.Integ4[1] - control_filtro_dq_mod2_B.SFunction[1]) * control_filtro_dq_mod2_P.K2_Value_e + (control_filtro_dq_mod2_P.Gain1_Gain * rtb_Kv_b[1] - control_filtro_dq_mod2_P.Gain_Gain * control_filtro_dq_mod2_DW.UnitDelay_DSTATE[1]);
        rtb_Switch[4] = (control_filtro_dq_mod2_B.Integ4[4] - control_filtro_dq_mod2_B.SFunction[4]) * control_filtro_dq_mod2_P.K2_Value_e + (control_filtro_dq_mod2_P.Gain1_Gain * rtb_Kv[1] - control_filtro_dq_mod2_P.Gain_Gain * control_filtro_dq_mod2_DW.UnitDelay_DSTATE[4]);
        rtb_Switch[2] = (control_filtro_dq_mod2_B.Integ4[2] - control_filtro_dq_mod2_B.SFunction[2]) * control_filtro_dq_mod2_P.K2_Value_e + (control_filtro_dq_mod2_P.Gain1_Gain * rtb_Kv_b[2] - control_filtro_dq_mod2_P.Gain_Gain * control_filtro_dq_mod2_DW.UnitDelay_DSTATE[2]);
        rtb_Switch[5] = (control_filtro_dq_mod2_B.Integ4[5] - control_filtro_dq_mod2_B.SFunction[5]) * control_filtro_dq_mod2_P.K2_Value_e + (control_filtro_dq_mod2_P.Gain1_Gain * rtb_Kv[2] - control_filtro_dq_mod2_P.Gain_Gain * control_filtro_dq_mod2_DW.UnitDelay_DSTATE[5]);
    } else {
        for (i = 0; i < 6; i++) {
            rtb_Switch[i] = control_filtro_dq_mod2_DW.UnitDelay1_DSTATE[i];
        }
    }
    /* End of Switch: '<S337>/Switch' */

    /* Outputs for Enabled SubSystem: '<S336>/TrueRMS ' incorporates:
 *  EnablePort: '<S352>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        /* DataTypeConversion: '<S336>/Data Type Conversion' incorporates:
 *  Constant: '<S336>/Constant'
 */
        if (control_filtro_dq_mod2_P.RMS2_TrueRMS != 0.0) {
            if (!control_filtro_dq_mod2_DW.TrueRMS_MODE) {
                /* Enable for DiscreteIntegrator: '<S361>/Integ4' */
                control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_n = 1U;
                control_filtro_dq_mod2_DW.TrueRMS_MODE = true;
            }
        } else {
            if (control_filtro_dq_mod2_DW.TrueRMS_MODE) {
                /* Disable for DiscreteIntegrator: '<S361>/Integ4' */
                for (i = 0; i < 6; i++) {
                    control_filtro_dq_mod2_DW.Integ4_DSTATE_h[i] = control_filtro_dq_mod2_B.Integ4_f[i];
                }
                /* End of Disable for DiscreteIntegrator: '<S361>/Integ4' */
                control_filtro_dq_mod2_DW.TrueRMS_MODE = false;
            }
        }
    }
    if (control_filtro_dq_mod2_DW.TrueRMS_MODE) {
        /* Product: '<S352>/Product' */
        rtb_Product[0] = rtb_Kv_b[0] * rtb_Kv_b[0];
        rtb_Product[3] = rtb_Kv[0] * rtb_Kv[0];
        rtb_Product[1] = rtb_Kv_b[1] * rtb_Kv_b[1];
        rtb_Product[4] = rtb_Kv[1] * rtb_Kv[1];
        rtb_Product[2] = rtb_Kv_b[2] * rtb_Kv_b[2];
        rtb_Product[5] = rtb_Kv[2] * rtb_Kv[2];
        /* DiscreteIntegrator: '<S361>/Integ4' */
        for (i = 0; i < 6; i++) {
            if (control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_n != 0) {
                control_filtro_dq_mod2_B.Integ4_f[i] = control_filtro_dq_mod2_DW.Integ4_DSTATE_h[i];
            } else {
                control_filtro_dq_mod2_B.Integ4_f[i] = control_filtro_dq_mod2_P.Integ4_gainval_h * rtb_Product[i] + control_filtro_dq_mod2_DW.Integ4_DSTATE_h[i];
            }
        }
        /* End of DiscreteIntegrator: '<S361>/Integ4' */

        /* Constant: '<S361>/K1' */
        control_filtro_dq_mod2_B.K1_p = control_filtro_dq_mod2_P.K1_Value_l;
%if !WHITE_SPACE(tlcOutputsFcnOfS10B0)
        /* S-Function (sfun_discreteVariableDelay): '<S362>/S-Function' */
%<tlcOutputsFcnOfS10B0>\
%endif
        /* Switch: '<S361>/Switch' incorporates:
 *  Constant: '<S361>/K2'
 *  DigitalClock: '<S361>/Digital  Clock'
 *  Gain: '<S361>/Gain'
 *  Gain: '<S361>/Gain1'
 *  Product: '<S361>/Product'
 *  RelationalOperator: '<S361>/Relational Operator'
 *  Sum: '<S361>/Sum1'
 *  Sum: '<S361>/Sum5'
 *  Sum: '<S361>/Sum7'
 *  UnitDelay: '<S361>/Unit Delay'
 *  UnitDelay: '<S361>/Unit Delay1'
 */
        if (%<(SLibCG_SE(LibGetTaskTime(1)))> >= control_filtro_dq_mod2_B.K1_p) {
            for (i = 0; i < 6; i++) {
                rtb_Switch_k[i] = (control_filtro_dq_mod2_B.Integ4_f[i] - control_filtro_dq_mod2_B.SFunction_g[i]) * control_filtro_dq_mod2_P.K2_Value_j3 + (control_filtro_dq_mod2_P.Gain1_Gain_d * rtb_Product[i] - control_filtro_dq_mod2_P.Gain_Gain_mn * control_filtro_dq_mod2_DW.UnitDelay_DSTATE_a[i]);
            }
        } else {
            for (i = 0; i < 6; i++) {
                rtb_Switch_k[i] = control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_g[i];
            }
        }
        /* End of Switch: '<S361>/Switch' */

        /* Update for DiscreteIntegrator: '<S361>/Integ4' */
        control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_n = 0U;
        for (i = 0; i < 6; i++) {
            /* Saturate: '<S352>/Saturation to avoid negative sqrt' */
            if (rtb_Switch_k[i] > control_filtro_dq_mod2_P.Saturationtoavoidnegativesqrt_n) {
                rtb_Gain2 = control_filtro_dq_mod2_P.Saturationtoavoidnegativesqrt_n;
            } else if (rtb_Switch_k[i] < control_filtro_dq_mod2_P.Saturationtoavoidnegativesqrt_b) {
                rtb_Gain2 = control_filtro_dq_mod2_P.Saturationtoavoidnegativesqrt_b;
            } else {
                rtb_Gain2 = rtb_Switch_k[i];
            }
            /* End of Saturate: '<S352>/Saturation to avoid negative sqrt' */

            /* Sqrt: '<S352>/Sqrt' */
            control_filtro_dq_mod2_B.Sqrt[i] = sqrt(rtb_Gain2);
            /* Update for DiscreteIntegrator: '<S361>/Integ4' */
            control_filtro_dq_mod2_DW.Integ4_DSTATE_h[i] = control_filtro_dq_mod2_P.Integ4_gainval_h * rtb_Product[i] + control_filtro_dq_mod2_B.Integ4_f[i];
        }
%if !WHITE_SPACE(tlcUpdateFcnOfS10B0)
        /* Update for S-Function (sfun_discreteVariableDelay): '<S362>/S-Function' */
%<tlcUpdateFcnOfS10B0>\
%endif
        for (i = 0; i < 6; i++) {
            /* Update for UnitDelay: '<S361>/Unit Delay' */
            control_filtro_dq_mod2_DW.UnitDelay_DSTATE_a[i] = rtb_Product[i];
            /* Update for UnitDelay: '<S361>/Unit Delay1' */
            control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_g[i] = rtb_Switch_k[i];
        }
    }
    /* End of Outputs for SubSystem: '<S336>/TrueRMS ' */

    /* Outputs for Enabled SubSystem: '<S336>/RMS ' incorporates:
 *  EnablePort: '<S351>/Enable'
 */
    if (%<(LibIsMajorTimeStep())>) {
        /* Logic: '<S336>/Logical Operator' incorporates:
 *  Constant: '<S336>/Constant'
 *  DataTypeConversion: '<S336>/Data Type Conversion'
 */
        if (!(control_filtro_dq_mod2_P.RMS2_TrueRMS != 0.0)) {
            if (!control_filtro_dq_mod2_DW.RMS_MODE) {
                /* Enable for Sin: '<S353>/sin(wt)' */
                control_filtro_dq_mod2_DW.systemEnable = 1;
                /* Enable for DiscreteIntegrator: '<S358>/Integ4' */
                control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_l = 1U;
                /* Enable for Sin: '<S353>/cos(wt)' */
                control_filtro_dq_mod2_DW.systemEnable_p = 1;
                /* Enable for DiscreteIntegrator: '<S356>/Integ4' */
                control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_b = 1U;
                control_filtro_dq_mod2_DW.RMS_MODE = true;
            }
        } else {
            if (control_filtro_dq_mod2_DW.RMS_MODE) {
                for (i = 0; i < 6; i++) {
                    /* Disable for DiscreteIntegrator: '<S358>/Integ4' */
                    control_filtro_dq_mod2_DW.Integ4_DSTATE_b[i] = control_filtro_dq_mod2_B.Integ4_fw[i];
                    /* Disable for DiscreteIntegrator: '<S356>/Integ4' */
                    control_filtro_dq_mod2_DW.Integ4_DSTATE_o[i] = control_filtro_dq_mod2_B.Integ4_k[i];
                }
                control_filtro_dq_mod2_DW.RMS_MODE = false;
            }
        }
        /* End of Logic: '<S336>/Logical Operator' */
    }
    if (control_filtro_dq_mod2_DW.RMS_MODE) {
        /* Sin: '<S353>/sin(wt)' */
        if (control_filtro_dq_mod2_DW.systemEnable != 0) {
            rtb_Gain2 = 6.2831853071795862 * control_filtro_dq_mod2_P.Fourier1_Freq_n * %<(SLibCG_SE(LibGetTaskTime(1)))>;
            control_filtro_dq_mod2_DW.lastSin = sin(rtb_Gain2);
            control_filtro_dq_mod2_DW.lastCos = cos(rtb_Gain2);
            control_filtro_dq_mod2_DW.systemEnable = 0;
        }
        rtb_c = ((control_filtro_dq_mod2_DW.lastSin * control_filtro_dq_mod2_P.sinwt_PCos_n + control_filtro_dq_mod2_DW.lastCos * control_filtro_dq_mod2_P.sinwt_PSin_p) * control_filtro_dq_mod2_P.sinwt_HCos_l + (control_filtro_dq_mod2_DW.lastCos * control_filtro_dq_mod2_P.sinwt_PCos_n - control_filtro_dq_mod2_DW.lastSin * control_filtro_dq_mod2_P.sinwt_PSin_p) * control_filtro_dq_mod2_P.sinwt_Hsin_m) * control_filtro_dq_mod2_P.sinwt_Amp_n + control_filtro_dq_mod2_P.sinwt_Bias_n;
        /* End of Sin: '<S353>/sin(wt)' */

        /* Product: '<S353>/Product' */
        rtb_Product_h[0] = rtb_Kv_b[0] * rtb_c;
        rtb_Product_h[3] = rtb_Kv[0] * rtb_c;
        rtb_Product_h[1] = rtb_Kv_b[1] * rtb_c;
        rtb_Product_h[4] = rtb_Kv[1] * rtb_c;
        rtb_Product_h[2] = rtb_Kv_b[2] * rtb_c;
        rtb_Product_h[5] = rtb_Kv[2] * rtb_c;
        /* DiscreteIntegrator: '<S358>/Integ4' */
        for (i = 0; i < 6; i++) {
            if (control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_l != 0) {
                control_filtro_dq_mod2_B.Integ4_fw[i] = control_filtro_dq_mod2_DW.Integ4_DSTATE_b[i];
            } else {
                control_filtro_dq_mod2_B.Integ4_fw[i] = control_filtro_dq_mod2_P.Integ4_gainval_i * rtb_Product_h[i] + control_filtro_dq_mod2_DW.Integ4_DSTATE_b[i];
            }
        }
        /* End of DiscreteIntegrator: '<S358>/Integ4' */

        /* Constant: '<S358>/K1' */
        control_filtro_dq_mod2_B.K1_d = control_filtro_dq_mod2_P.K1_Value_c;
%if !WHITE_SPACE(tlcOutputsFcnOfS8B0)
        /* S-Function (sfun_discreteVariableDelay): '<S359>/S-Function' */
%<tlcOutputsFcnOfS8B0>\
%endif
        /* Switch: '<S358>/Switch' incorporates:
 *  Constant: '<S358>/K2'
 *  DigitalClock: '<S358>/Digital  Clock'
 *  Gain: '<S358>/Gain'
 *  Gain: '<S358>/Gain1'
 *  Product: '<S358>/Product'
 *  RelationalOperator: '<S358>/Relational Operator'
 *  Sum: '<S358>/Sum1'
 *  Sum: '<S358>/Sum5'
 *  Sum: '<S358>/Sum7'
 *  UnitDelay: '<S358>/Unit Delay'
 *  UnitDelay: '<S358>/Unit Delay1'
 */
        if (%<(SLibCG_SE(LibGetTaskTime(1)))> >= control_filtro_dq_mod2_B.K1_d) {
            for (i = 0; i < 6; i++) {
                rtb_Switch_k[i] = (control_filtro_dq_mod2_B.Integ4_fw[i] - control_filtro_dq_mod2_B.SFunction_j[i]) * control_filtro_dq_mod2_P.K2_Value_p + (control_filtro_dq_mod2_P.Gain1_Gain_l * rtb_Product_h[i] - control_filtro_dq_mod2_P.Gain_Gain_i * control_filtro_dq_mod2_DW.UnitDelay_DSTATE_k[i]);
            }
        } else {
            for (i = 0; i < 6; i++) {
                rtb_Switch_k[i] = control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_i[i];
            }
        }
        /* End of Switch: '<S358>/Switch' */

        /* Sin: '<S353>/cos(wt)' */
        if (control_filtro_dq_mod2_DW.systemEnable_p != 0) {
            control_filtro_dq_mod2_DW.lastSin_a = sin(6.2831853071795862 * control_filtro_dq_mod2_P.Fourier1_Freq_n * %<(SLibCG_SE(LibGetTaskTime(1)))>);
            control_filtro_dq_mod2_DW.lastCos_j = cos(6.2831853071795862 * control_filtro_dq_mod2_P.Fourier1_Freq_n * %<(SLibCG_SE(LibGetTaskTime(1)))>);
            control_filtro_dq_mod2_DW.systemEnable_p = 0;
        }
        rtb_c = ((control_filtro_dq_mod2_DW.lastSin_a * control_filtro_dq_mod2_P.coswt_PCos_p + control_filtro_dq_mod2_DW.lastCos_j * control_filtro_dq_mod2_P.coswt_PSin_i) * control_filtro_dq_mod2_P.coswt_HCos_g + (control_filtro_dq_mod2_DW.lastCos_j * control_filtro_dq_mod2_P.coswt_PCos_p - control_filtro_dq_mod2_DW.lastSin_a * control_filtro_dq_mod2_P.coswt_PSin_i) * control_filtro_dq_mod2_P.coswt_Hsin_j) * control_filtro_dq_mod2_P.coswt_Amp_e + control_filtro_dq_mod2_P.coswt_Bias_l;
        /* End of Sin: '<S353>/cos(wt)' */

        /* Product: '<S353>/Product1' */
        rtb_Product1[0] = rtb_Kv_b[0] * rtb_c;
        rtb_Product1[3] = rtb_Kv[0] * rtb_c;
        rtb_Product1[1] = rtb_Kv_b[1] * rtb_c;
        rtb_Product1[4] = rtb_Kv[1] * rtb_c;
        rtb_Product1[2] = rtb_Kv_b[2] * rtb_c;
        rtb_Product1[5] = rtb_Kv[2] * rtb_c;
        /* DiscreteIntegrator: '<S356>/Integ4' */
        for (i = 0; i < 6; i++) {
            if (control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_b != 0) {
                control_filtro_dq_mod2_B.Integ4_k[i] = control_filtro_dq_mod2_DW.Integ4_DSTATE_o[i];
            } else {
                control_filtro_dq_mod2_B.Integ4_k[i] = control_filtro_dq_mod2_P.Integ4_gainval_p * rtb_Product1[i] + control_filtro_dq_mod2_DW.Integ4_DSTATE_o[i];
            }
        }
        /* End of DiscreteIntegrator: '<S356>/Integ4' */

        /* Constant: '<S356>/K1' */
        control_filtro_dq_mod2_B.K1_h = control_filtro_dq_mod2_P.K1_Value_dy;
%if !WHITE_SPACE(tlcOutputsFcnOfS8B3)
        /* S-Function (sfun_discreteVariableDelay): '<S357>/S-Function' */
%<tlcOutputsFcnOfS8B3>\
%endif
        /* Switch: '<S356>/Switch' incorporates:
 *  Constant: '<S356>/K2'
 *  DigitalClock: '<S356>/Digital  Clock'
 *  Gain: '<S356>/Gain'
 *  Gain: '<S356>/Gain1'
 *  Product: '<S356>/Product'
 *  RelationalOperator: '<S356>/Relational Operator'
 *  Sum: '<S356>/Sum1'
 *  Sum: '<S356>/Sum5'
 *  Sum: '<S356>/Sum7'
 *  UnitDelay: '<S356>/Unit Delay'
 *  UnitDelay: '<S356>/Unit Delay1'
 */
        if (%<(SLibCG_SE(LibGetTaskTime(1)))> >= control_filtro_dq_mod2_B.K1_h) {
            for (i = 0; i < 6; i++) {
                rtb_Switch_jt[i] = (control_filtro_dq_mod2_B.Integ4_k[i] - control_filtro_dq_mod2_B.SFunction_gy[i]) * control_filtro_dq_mod2_P.K2_Value_j + (control_filtro_dq_mod2_P.Gain1_Gain_b * rtb_Product1[i] - control_filtro_dq_mod2_P.Gain_Gain_g * control_filtro_dq_mod2_DW.UnitDelay_DSTATE_c[i]);
            }
        } else {
            for (i = 0; i < 6; i++) {
                rtb_Switch_jt[i] = control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_ip[i];
            }
        }
        /* End of Switch: '<S356>/Switch' */

        /* Update for Sin: '<S353>/sin(wt)' */
        rtb_c = control_filtro_dq_mod2_DW.lastSin;
        control_filtro_dq_mod2_DW.lastSin = control_filtro_dq_mod2_DW.lastSin * control_filtro_dq_mod2_P.sinwt_HCos_l + control_filtro_dq_mod2_DW.lastCos * control_filtro_dq_mod2_P.sinwt_Hsin_m;
        control_filtro_dq_mod2_DW.lastCos = control_filtro_dq_mod2_DW.lastCos * control_filtro_dq_mod2_P.sinwt_HCos_l - rtb_c * control_filtro_dq_mod2_P.sinwt_Hsin_m;
        /* Update for DiscreteIntegrator: '<S358>/Integ4' */
        control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_l = 0U;
        for (i = 0; i < 6; i++) {
            /* Gain: '<S351>/Gain' incorporates:
 *  ComplexToMagnitudeAngle: '<S353>/Complex to Magnitude-Angle'
 *  RealImagToComplex: '<S353>/Real-Imag to Complex'
 */
            control_filtro_dq_mod2_B.Gain_b[i] = control_filtro_dq_mod2_P.Gain_Gain_k * %<(SLibCGCallSubFcn("rt_hypotd_snf", ["rtb_Switch_k[i]", "rtb_Switch_jt[i]"], 0, 4, 19))>;
            /* Update for DiscreteIntegrator: '<S358>/Integ4' */
            control_filtro_dq_mod2_DW.Integ4_DSTATE_b[i] = control_filtro_dq_mod2_P.Integ4_gainval_i * rtb_Product_h[i] + control_filtro_dq_mod2_B.Integ4_fw[i];
        }
%if !WHITE_SPACE(tlcUpdateFcnOfS8B0)
        /* Update for S-Function (sfun_discreteVariableDelay): '<S359>/S-Function' */
%<tlcUpdateFcnOfS8B0>\
%endif
        /* Update for Sin: '<S353>/cos(wt)' */
        rtb_c = control_filtro_dq_mod2_DW.lastSin_a;
        control_filtro_dq_mod2_DW.lastSin_a = control_filtro_dq_mod2_DW.lastSin_a * control_filtro_dq_mod2_P.coswt_HCos_g + control_filtro_dq_mod2_DW.lastCos_j * control_filtro_dq_mod2_P.coswt_Hsin_j;
        control_filtro_dq_mod2_DW.lastCos_j = control_filtro_dq_mod2_DW.lastCos_j * control_filtro_dq_mod2_P.coswt_HCos_g - rtb_c * control_filtro_dq_mod2_P.coswt_Hsin_j;
        /* Update for DiscreteIntegrator: '<S356>/Integ4' */
        control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE_b = 0U;
        for (i = 0; i < 6; i++) {
            /* Update for UnitDelay: '<S358>/Unit Delay' */
            control_filtro_dq_mod2_DW.UnitDelay_DSTATE_k[i] = rtb_Product_h[i];
            /* Update for UnitDelay: '<S358>/Unit Delay1' */
            control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_i[i] = rtb_Switch_k[i];
            /* Update for DiscreteIntegrator: '<S356>/Integ4' */
            control_filtro_dq_mod2_DW.Integ4_DSTATE_o[i] = control_filtro_dq_mod2_P.Integ4_gainval_p * rtb_Product1[i] + control_filtro_dq_mod2_B.Integ4_k[i];
        }
%if !WHITE_SPACE(tlcUpdateFcnOfS8B3)
        /* Update for S-Function (sfun_discreteVariableDelay): '<S357>/S-Function' */
%<tlcUpdateFcnOfS8B3>\
%endif
        for (i = 0; i < 6; i++) {
            /* Update for UnitDelay: '<S356>/Unit Delay' */
            control_filtro_dq_mod2_DW.UnitDelay_DSTATE_c[i] = rtb_Product1[i];
            /* Update for UnitDelay: '<S356>/Unit Delay1' */
            control_filtro_dq_mod2_DW.UnitDelay1_DSTATE_ip[i] = rtb_Switch_jt[i];
        }
    }
    /* End of Outputs for SubSystem: '<S336>/RMS ' */
    for (i = 0; i < 6; i++) {
        /* Switch: '<S336>/Switch' incorporates:
 *  Constant: '<S336>/Constant'
 *  DataTypeConversion: '<S336>/Data Type Conversion'
 */
        if (control_filtro_dq_mod2_P.RMS2_TrueRMS != 0.0) {
            rtb_Gain_f[i] = control_filtro_dq_mod2_B.Sqrt[i];
        } else {
            rtb_Gain_f[i] = control_filtro_dq_mod2_B.Gain_b[i];
        }
        /* End of Switch: '<S336>/Switch' */

        /* Math: '<S11>/Math Function2' */
        rtb_Gain_f[i] *= rtb_Gain_f[i];
        /* Saturate: '<S11>/Saturation to avoid division by 0' incorporates:
 *  Sum: '<S11>/Add'
 */
        if (rtb_Gain_f[i] > control_filtro_dq_mod2_P.Saturationtoavoiddivisionby0_Up) {
            rtb_Gain2 = control_filtro_dq_mod2_P.Saturationtoavoiddivisionby0_Up;
        } else if (rtb_Gain_f[i] < control_filtro_dq_mod2_P.Saturationtoavoiddivisionby0_Lo) {
            rtb_Gain2 = control_filtro_dq_mod2_P.Saturationtoavoiddivisionby0_Lo;
        } else {
            rtb_Gain2 = rtb_Gain_f[i];
        }
        /* End of Saturate: '<S11>/Saturation to avoid division by 0' */

        /* Product: '<S11>/Divide' incorporates:
 *  Math: '<S11>/Math Function1'
 *  Sum: '<S11>/Add'
 */
        rtb_Gain_f[i] = ((rtb_Switch_f[i] - rtb_Switch[i] * rtb_Switch[i]) - rtb_Gain_f[i]) / rtb_Gain2;
        /* Saturate: '<S11>/Saturation to avoid division by 0 ' */
        if (rtb_Gain_f[i] > control_filtro_dq_mod2_P.Saturationtoavoiddivisionby0__e) {
            rtb_Gain_f[i] = control_filtro_dq_mod2_P.Saturationtoavoiddivisionby0__e;
        } else {
            if (rtb_Gain_f[i] < control_filtro_dq_mod2_P.Saturationtoavoiddivisionby0__m) {
                rtb_Gain_f[i] = control_filtro_dq_mod2_P.Saturationtoavoiddivisionby0__m;
            }
        }
        /* End of Saturate: '<S11>/Saturation to avoid division by 0 ' */

        /* Sqrt: '<S11>/Sqrt' */
        rtb_Gain_f[i] = sqrt(rtb_Gain_f[i]);
        /* Gain: '<Root>/Gain' */
        rtb_Gain_f[i] *= control_filtro_dq_mod2_P.Gain_Gain_o;
    }
%if !WHITE_SPACE(tlcOutputsFcnOfS11B362)
    /* Scope: '<Root>/Scope2' */
%<tlcOutputsFcnOfS11B362>\
%endif
    /* Gain: '<S375>/do not delete this gain' */
    rtb_d = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_k * control_filtro_dq_mod2_B.StateSpace_o1[64];
    /* Gain: '<S13>/Kv1' incorporates:
 *  Gain: '<S376>/do not delete this gain'
 *  Gain: '<S377>/do not delete this gain'
 */
    rtb_Gain1_j[0] = control_filtro_dq_mod2_P.Kv1_Gain_h * rtb_d;
    rtb_Gain1_j[1] = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_p2 * control_filtro_dq_mod2_B.StateSpace_o1[65] * control_filtro_dq_mod2_P.Kv1_Gain_h;
    rtb_Gain1_j[2] = control_filtro_dq_mod2_P.donotdeletethisgain_Gain_ag * control_filtro_dq_mod2_B.StateSpace_o1[66] * control_filtro_dq_mod2_P.Kv1_Gain_h;
%if !WHITE_SPACE(tlcOutputsFcnOfS11B363)
    /* Scope: '<Root>/Scope5' */
%<tlcOutputsFcnOfS11B363>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS11B364)
    /* Scope: '<Root>/Scope6' */
%<tlcOutputsFcnOfS11B364>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS11B368)
    /* Scope: '<S7>/Scope1' */
%<tlcOutputsFcnOfS11B368>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS11B369)
    /* Scope: '<S7>/Scope16' */
%<tlcOutputsFcnOfS11B369>\
%endif
    /* Gain: '<S317>/Integral Gain' */
    rtb_IntegralGain = control_filtro_dq_mod2_P.DiscretePIDController_I * rtb_Sum2;
    /* Fcn: '<S326>/d' */
    rtb_d = (sin(control_filtro_dq_mod2_B.Integrator - 2.0943951023931953) * control_filtro_dq_mod2_B.Kv1[1] + sin(control_filtro_dq_mod2_B.Integrator) * control_filtro_dq_mod2_B.Kv1[0]) + sin(control_filtro_dq_mod2_B.Integrator + 2.0943951023931953) * control_filtro_dq_mod2_B.Kv1[2];
    /* Gain: '<S326>/Gain1' incorporates:
 *  Fcn: '<S326>/0'
 *  Fcn: '<S326>/q'
 */
    rtb_Gain1_j[0] = control_filtro_dq_mod2_P.Gain1_Gain_g * rtb_d;
    rtb_Gain1_j[1] = ((cos(control_filtro_dq_mod2_B.Integrator - 2.0943951023931953) * control_filtro_dq_mod2_B.Kv1[1] + cos(control_filtro_dq_mod2_B.Integrator) * control_filtro_dq_mod2_B.Kv1[0]) + cos(control_filtro_dq_mod2_B.Integrator + 2.0943951023931953) * control_filtro_dq_mod2_B.Kv1[2]) * control_filtro_dq_mod2_P.Gain1_Gain_g;
    rtb_Gain1_j[2] = ((control_filtro_dq_mod2_B.Kv1[0] + control_filtro_dq_mod2_B.Kv1[1]) + control_filtro_dq_mod2_B.Kv1[2]) * 0.5 * control_filtro_dq_mod2_P.Gain1_Gain_g;
    /* DiscreteIntegrator: '<S325>/Integrator' incorporates:
 *  Gain: '<S325>/Integral Gain'
 */
    control_filtro_dq_mod2_B.Integrator_g = control_filtro_dq_mod2_P.ThreePhaseSinusoidalMeasurement * rtb_Gain1_j[1] * control_filtro_dq_mod2_P.Integrator_gainval_p + control_filtro_dq_mod2_DW.Integrator_DSTATE_j;
    /* Sum: '<S325>/Sum' incorporates:
 *  Gain: '<S325>/Proportional Gain'
 */
    rtb_Sum = control_filtro_dq_mod2_P.ThreePhaseSinusoidalMeasureme_g * rtb_Gain1_j[1] + control_filtro_dq_mod2_B.Integrator_g;
}
/* Sum: '<S331>/Sum2' */
control_filtro_dq_mod2_B.Sum2 = AC_tmp;
/* Sum: '<S331>/Sum4' incorporates:
 *  Gain: '<S331>/Gain'
 *  Integrator: '<S331>/Integrator2'
 *  Product: '<S331>/Product5'
 */
control_filtro_dq_mod2_B.Sum4 = control_filtro_dq_mod2_B.Constant_k * control_filtro_dq_mod2_X.Integrator2_CSTATE - control_filtro_dq_mod2_P.Gain_Gain_fs * rtb_Product4;
/* Sum: '<S332>/Sum2' */
control_filtro_dq_mod2_B.Sum2_e = rtb_Sum3_tmp;
/* Sum: '<S332>/Sum4' incorporates:
 *  Gain: '<S332>/Gain'
 *  Integrator: '<S332>/Integrator2'
 *  Product: '<S332>/Product5'
 */
control_filtro_dq_mod2_B.Sum4_h = control_filtro_dq_mod2_B.Constant1 * control_filtro_dq_mod2_X.Integrator2_CSTATE_f - control_filtro_dq_mod2_P.Gain_Gain_o2 * rtb_Product4_g;
/* Sum: '<S333>/Sum2' */
control_filtro_dq_mod2_B.Sum2_l = rtb_Sum4_tmp;
/* Sum: '<S333>/Sum4' incorporates:
 *  Gain: '<S333>/Gain'
 *  Integrator: '<S333>/Integrator2'
 *  Product: '<S333>/Product5'
 */
control_filtro_dq_mod2_B.Sum4_a = control_filtro_dq_mod2_B.Constant3 * control_filtro_dq_mod2_X.Integrator2_CSTATE_k - control_filtro_dq_mod2_P.Gain_Gain_e * rtb_Product4_m;
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
%if !WHITE_SPACE(tlcOutputsFcnOfS11B488)
    /* Scope: '<Root>/Scope3' incorporates:
 *  Constant: '<Root>/Constant1'
 */
%<tlcOutputsFcnOfS11B488>\
%endif
}
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 4, fcnProtoType)>
%endfunction
