%implements s11_b0_608lq_Update "C"

%function Update(block, system) Output
%<SLibCGIRAccessLocalVar(16, 0)> %% rtb_Sum
%<SLibCGIRAccessLocalVar(125, 0)> %% rtb_Compare
%<SLibCGIRAccessLocalVar(13, 0)> %% rtb_IntegralGain
%<SLibCGIRAccessLocalVar(5, 0)> %% rtb_Kv_b
%<SLibCGIRAccessLocalVar(2, 0)> %% rtb_Kv
%<SLibCGIRAccessLocalVar(9, 0)> %% rtb_Switch
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
int32_T i;
%closefile localVarDecl
%assign tlcUpdateFcnOfS11B10 = OpaqueTLCBlockFcn("Update", 11, 10, 0, 5)
%assign tlcUpdateFcnOfS11B356 = OpaqueTLCBlockFcn("Update", 11, 356, 0, 5)
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
%if !WHITE_SPACE(tlcUpdateFcnOfS11B10)
    /* Update for S-Function (sfun_spssw_discc): '<S383>/State-Space' incorporates:
 *  Constant: '<S109>/Constant'
 *  Constant: '<S110>/Constant'
 *  Constant: '<S111>/Constant'
 *  Constant: '<S122>/DC'
 *  Constant: '<S132>/DC'
 *  Constant: '<S142>/DC'
 *  Constant: '<S184>/Constant'
 *  Constant: '<S185>/Constant'
 *  Constant: '<S186>/Constant'
 *  Constant: '<S197>/DC'
 *  Constant: '<S207>/DC'
 *  Constant: '<S217>/DC'
 *  Constant: '<S34>/Constant'
 *  Constant: '<S35>/Constant'
 *  Constant: '<S36>/Constant'
 *  Constant: '<S381>/g'
 *  Constant: '<S385>/SwitchCurrents'
 *  Constant: '<S47>/DC'
 *  Constant: '<S57>/DC'
 *  Constant: '<S67>/DC'
 */
%<tlcUpdateFcnOfS11B10>\
%endif
    /* Update for DiscreteIntegrator: '<S329>/Integrator' */
    control_filtro_dq_mod2_DW.Integrator_DSTATE += control_filtro_dq_mod2_P.Integrator_gainval * rtb_Sum;
    control_filtro_dq_mod2_DW.Integrator_PrevResetState = (int8_T)rtb_Compare;
    /* Update for DiscreteIntegrator: '<S317>/Integrator' */
    control_filtro_dq_mod2_DW.Integrator_DSTATE_o += control_filtro_dq_mod2_P.Integrator_gainval_d * rtb_IntegralGain;
    /* Update for DiscreteIntegrator: '<S337>/Integ4' */
    control_filtro_dq_mod2_DW.Integ4_SYSTEM_ENABLE = 0U;
    control_filtro_dq_mod2_DW.Integ4_DSTATE[0] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv_b[0] + control_filtro_dq_mod2_B.Integ4[0];
    control_filtro_dq_mod2_DW.Integ4_DSTATE[3] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv[0] + control_filtro_dq_mod2_B.Integ4[3];
    control_filtro_dq_mod2_DW.Integ4_DSTATE[1] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv_b[1] + control_filtro_dq_mod2_B.Integ4[1];
    control_filtro_dq_mod2_DW.Integ4_DSTATE[4] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv[1] + control_filtro_dq_mod2_B.Integ4[4];
    control_filtro_dq_mod2_DW.Integ4_DSTATE[2] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv_b[2] + control_filtro_dq_mod2_B.Integ4[2];
    control_filtro_dq_mod2_DW.Integ4_DSTATE[5] = control_filtro_dq_mod2_P.Integ4_gainval_f * rtb_Kv[2] + control_filtro_dq_mod2_B.Integ4[5];
%if !WHITE_SPACE(tlcUpdateFcnOfS11B356)
    /* Update for S-Function (sfun_discreteVariableDelay): '<S338>/S-Function' */
%<tlcUpdateFcnOfS11B356>\
%endif
    /* Update for UnitDelay: '<S337>/Unit Delay' */
    control_filtro_dq_mod2_DW.UnitDelay_DSTATE[0] = rtb_Kv_b[0];
    control_filtro_dq_mod2_DW.UnitDelay_DSTATE[3] = rtb_Kv[0];
    control_filtro_dq_mod2_DW.UnitDelay_DSTATE[1] = rtb_Kv_b[1];
    control_filtro_dq_mod2_DW.UnitDelay_DSTATE[4] = rtb_Kv[1];
    control_filtro_dq_mod2_DW.UnitDelay_DSTATE[2] = rtb_Kv_b[2];
    control_filtro_dq_mod2_DW.UnitDelay_DSTATE[5] = rtb_Kv[2];
    /* Update for UnitDelay: '<S337>/Unit Delay1' */
    for (i = 0; i < 6; i++) {
        control_filtro_dq_mod2_DW.UnitDelay1_DSTATE[i] = rtb_Switch[i];
    }
    /* End of Update for UnitDelay: '<S337>/Unit Delay1' */

    /* Update for DiscreteIntegrator: '<S325>/Integrator' */
    control_filtro_dq_mod2_DW.Integrator_DSTATE_j = control_filtro_dq_mod2_B.Integrator_g;
}
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedUpdateLocalVars", localVarDecl)>
%endfunction
%function UpdateFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Update(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 5, fcnProtoType)>
%endfunction
