%implements s11_b0_kpdwe_Update "C"

%function UpdateForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
real_T HoldSine;
int32_T i;
%closefile localVarDecl
%assign tlcUpdateFcnOfS11B10 = OpaqueTLCBlockFcn("Update", 11, 10, 0, 4)
%assign tlcUpdateFcnOfS11B58 = OpaqueTLCBlockFcn("Update", 11, 58, 0, 4)
%assign tlcUpdateFcnOfS11B75 = OpaqueTLCBlockFcn("Update", 11, 75, 0, 4)
%assign tlcUpdateFcnOfS11B160 = OpaqueTLCBlockFcn("Update", 11, 160, 0, 4)
%assign tlcUpdateFcnOfS11B177 = OpaqueTLCBlockFcn("Update", 11, 177, 0, 4)
%assign tlcUpdateFcnOfS11B262 = OpaqueTLCBlockFcn("Update", 11, 262, 0, 4)
%assign tlcUpdateFcnOfS11B279 = OpaqueTLCBlockFcn("Update", 11, 279, 0, 4)
%assign tlcUpdateFcnOfS5B0 = OpaqueTLCBlockFcn("Update", 5, 0, 0, 4)
%assign tlcUpdateFcnOfS3B0 = OpaqueTLCBlockFcn("Update", 3, 0, 0, 4)
%assign tlcUpdateFcnOfS3B3 = OpaqueTLCBlockFcn("Update", 3, 3, 0, 4)
%assign tlcUpdateFcnOfS11B353 = OpaqueTLCBlockFcn("Update", 11, 353, 0, 4)
%assign tlcUpdateFcnOfS10B0 = OpaqueTLCBlockFcn("Update", 10, 0, 0, 4)
%assign tlcUpdateFcnOfS8B0 = OpaqueTLCBlockFcn("Update", 8, 0, 0, 4)
%assign tlcUpdateFcnOfS8B3 = OpaqueTLCBlockFcn("Update", 8, 3, 0, 4)
%assign tlcUpdateFcnOfS11B508 = OpaqueTLCBlockFcn("Update", 11, 508, 0, 4)
%assign tlcUpdateFcnOfS11B510 = OpaqueTLCBlockFcn("Update", 11, 510, 0, 4)
%assign tlcUpdateFcnOfS11B512 = OpaqueTLCBlockFcn("Update", 11, 512, 0, 4)
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
%<tlcUpdateFcnOfS11B10>\
    rtDW.dq5pyr5pth += rtP.Integrator_gainval * rtB.guhd34rlrh;
    rtDW.orgycufrfi = (int8_T)rtB.ozr3h3mrxo;
}
if (%<(SLibCGIRIsSampleHit(2, 11))>) {
    rtDW.pp5dqjxda4 += rtP.Integrator_gainval_bwlpqrcjuy * rtB.kljwcayjaz;
}
%<tlcUpdateFcnOfS11B58>\
%<tlcUpdateFcnOfS11B75>\
%<tlcUpdateFcnOfS11B160>\
%<tlcUpdateFcnOfS11B177>\
%<tlcUpdateFcnOfS11B262>\
%<tlcUpdateFcnOfS11B279>\
if (%<(SLibCGIRIsSampleHit(1, 11))>) {
    if (rtDW.k3eon5h1qb) {
        rtDW.ieuipd53wn = 0U;
        for (i = 0; i < 6; i++) {
            rtDW.ddoj5ly5bv[i] = rtP.Integ4_gainval_dup425i1xm * rtB.pwfwleb1tg[i] + rtB.lrojxver3t[i];
        }
%<tlcUpdateFcnOfS5B0>\
        for (i = 0; i < 6; i++) {
            rtDW.jktymjik3f[i] = rtB.pwfwleb1tg[i];
            rtDW.dm5jpsbr0u[i] = rtB.mqyqhzpruk[i];
        }
    }
    if (rtDW.f0nzjjist2) {
        HoldSine = rtDW.h1mac1no4b;
        rtDW.h1mac1no4b = rtDW.h1mac1no4b * rtP.sinwt_HCos + rtDW.k21b3oiwx0 * rtP.sinwt_Hsin;
        rtDW.k21b3oiwx0 = rtDW.k21b3oiwx0 * rtP.sinwt_HCos - HoldSine * rtP.sinwt_Hsin;
        rtDW.ek1pi4zt2i = 0U;
        for (i = 0; i < 6; i++) {
            rtDW.ddr325kekl[i] = rtP.Integ4_gainval * rtB.h2zssju40z[i] + rtB.anvktgbml0[i];
        }
%<tlcUpdateFcnOfS3B0>\
        HoldSine = rtDW.fqfznroxhy;
        rtDW.fqfznroxhy = rtDW.fqfznroxhy * rtP.coswt_HCos + rtDW.c2d3avdd2y * rtP.coswt_Hsin;
        rtDW.c2d3avdd2y = rtDW.c2d3avdd2y * rtP.coswt_HCos - HoldSine * rtP.coswt_Hsin;
        rtDW.b5h3e3v5uf = 0U;
        for (i = 0; i < 6; i++) {
            rtDW.kmhfchs0ti[i] = rtB.h2zssju40z[i];
            rtDW.gyzb5ber05[i] = rtB.a44c4jrokq[i];
            rtDW.kc4kf33f50[i] = rtP.Integ4_gainval_bmdjwgihwa * rtB.pgfzrviwby[i] + rtB.b3kw3r5sqk[i];
        }
%<tlcUpdateFcnOfS3B3>\
        for (i = 0; i < 6; i++) {
            rtDW.osna0tlz5m[i] = rtB.pgfzrviwby[i];
            rtDW.pa1evhphzv[i] = rtB.msvknivwtn[i];
        }
    }
    rtDW.pp5qlsrmmp = 0U;
    rtDW.hjvd4tcive[0] = rtP.Integ4_gainval_fjtd3otcam * rtB.lwwyd1ikll[0] + rtB.mxylg10qdc[0];
    rtDW.hjvd4tcive[3] = rtP.Integ4_gainval_fjtd3otcam * rtB.jp0lrw5tan[0] + rtB.mxylg10qdc[3];
    rtDW.hjvd4tcive[1] = rtP.Integ4_gainval_fjtd3otcam * rtB.lwwyd1ikll[1] + rtB.mxylg10qdc[1];
    rtDW.hjvd4tcive[4] = rtP.Integ4_gainval_fjtd3otcam * rtB.jp0lrw5tan[1] + rtB.mxylg10qdc[4];
    rtDW.hjvd4tcive[2] = rtP.Integ4_gainval_fjtd3otcam * rtB.lwwyd1ikll[2] + rtB.mxylg10qdc[2];
    rtDW.hjvd4tcive[5] = rtP.Integ4_gainval_fjtd3otcam * rtB.jp0lrw5tan[2] + rtB.mxylg10qdc[5];
%<tlcUpdateFcnOfS11B353>\
    rtDW.bncpjtwwpz[0] = rtB.lwwyd1ikll[0];
    rtDW.bncpjtwwpz[3] = rtB.jp0lrw5tan[0];
    rtDW.bncpjtwwpz[1] = rtB.lwwyd1ikll[1];
    rtDW.bncpjtwwpz[4] = rtB.jp0lrw5tan[1];
    rtDW.bncpjtwwpz[2] = rtB.lwwyd1ikll[2];
    rtDW.bncpjtwwpz[5] = rtB.jp0lrw5tan[2];
    for (i = 0; i < 6; i++) {
        rtDW.phxxjuddcw[i] = rtB.bl3lpky2yc[i];
    }
    if (rtDW.ilv3wasjlr) {
        rtDW.fyurxuic0o = 0U;
        for (i = 0; i < 6; i++) {
            rtDW.chak5btagm[i] = rtP.Integ4_gainval_hwkmwkkgv3 * rtB.pal03kkzun[i] + rtB.m1khc0a133[i];
        }
%<tlcUpdateFcnOfS10B0>\
        for (i = 0; i < 6; i++) {
            rtDW.eigdomqjel[i] = rtB.pal03kkzun[i];
            rtDW.egazhmomsl[i] = rtB.nxsh2uchuz[i];
        }
    }
    if (rtDW.lhfr0mtsqf) {
        HoldSine = rtDW.kj5zjvnf0z;
        rtDW.kj5zjvnf0z = rtDW.kj5zjvnf0z * rtP.sinwt_HCos_lugqrxzfrc + rtDW.krtrk0zqeb * rtP.sinwt_Hsin_meercsozqk;
        rtDW.krtrk0zqeb = rtDW.krtrk0zqeb * rtP.sinwt_HCos_lugqrxzfrc - HoldSine * rtP.sinwt_Hsin_meercsozqk;
        rtDW.b2ma3dsixd = 0U;
        for (i = 0; i < 6; i++) {
            rtDW.pbxuvgofqd[i] = rtP.Integ4_gainval_iaukoiht2v * rtB.mbxussuvn3[i] + rtB.oyjid4kx4c[i];
        }
%<tlcUpdateFcnOfS8B0>\
        HoldSine = rtDW.bsoe0c0ume;
        rtDW.bsoe0c0ume = rtDW.bsoe0c0ume * rtP.coswt_HCos_gkho1hbb4a + rtDW.kqpk15duw4 * rtP.coswt_Hsin_jigh4xceje;
        rtDW.kqpk15duw4 = rtDW.kqpk15duw4 * rtP.coswt_HCos_gkho1hbb4a - HoldSine * rtP.coswt_Hsin_jigh4xceje;
        rtDW.fcu2pkqcek = 0U;
        for (i = 0; i < 6; i++) {
            rtDW.cpzbgsvfck[i] = rtB.mbxussuvn3[i];
            rtDW.dckccpcrcq[i] = rtB.fizvhupyam[i];
            rtDW.cg5qt5fq12[i] = rtP.Integ4_gainval_px1swq1m10 * rtB.imkeikow4q[i] + rtB.dpdnqhtz0c[i];
        }
%<tlcUpdateFcnOfS8B3>\
        for (i = 0; i < 6; i++) {
            rtDW.glbg01zqum[i] = rtB.imkeikow4q[i];
            rtDW.afrv0o0qgw[i] = rtB.k4imo5px5w[i];
        }
    }
    rtDW.guslikski4 = rtB.kdrbbcv10f;
}
%<tlcUpdateFcnOfS11B508>\
%<tlcUpdateFcnOfS11B510>\
%<tlcUpdateFcnOfS11B512>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedUpdateLocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function UpdateFcnProtoTypeForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Update(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 4, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign ::GlobalCurrentTID = []
%endif
%endfunction
